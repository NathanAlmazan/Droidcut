{"version":3,"file":"static/js/722.c1f868f8.chunk.js","mappings":"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","sources":["components/Label.js","components/Page.js","components/Snackbar/index.js","components/_schedule/ScheduleCard.js","models/ScheduleModel.js","pages/Schedule.js"],"sourcesContent":["import PropTypes from 'prop-types';\n// material\nimport { alpha, styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('span')(({ theme, ownerState }) => {\n  const { color, variant } = ownerState;\n\n  const styleFilled = (color) => ({\n    color: theme.palette[color].contrastText,\n    backgroundColor: theme.palette[color].main\n  });\n\n  const styleOutlined = (color) => ({\n    color: theme.palette[color].main,\n    backgroundColor: 'transparent',\n    border: `1px solid ${theme.palette[color].main}`\n  });\n\n  const styleGhost = (color) => ({\n    color: theme.palette[color].dark,\n    backgroundColor: alpha(theme.palette[color].main, 0.16)\n  });\n\n  return {\n    height: 22,\n    minWidth: 22,\n    lineHeight: 0,\n    borderRadius: 8,\n    cursor: 'default',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    padding: theme.spacing(0, 1),\n    color: theme.palette.grey[800],\n    fontSize: theme.typography.pxToRem(12),\n    fontFamily: theme.typography.fontFamily,\n    backgroundColor: theme.palette.grey[300],\n    fontWeight: theme.typography.fontWeightBold,\n\n    ...(color !== 'default'\n      ? {\n          ...(variant === 'filled' && { ...styleFilled(color) }),\n          ...(variant === 'outlined' && { ...styleOutlined(color) }),\n          ...(variant === 'ghost' && { ...styleGhost(color) })\n        }\n      : {\n          ...(variant === 'outlined' && {\n            backgroundColor: 'transparent',\n            color: theme.palette.text.primary,\n            border: `1px solid ${theme.palette.grey[500_32]}`\n          }),\n          ...(variant === 'ghost' && {\n            color: theme.palette.text.secondary,\n            backgroundColor: theme.palette.grey[500_16]\n          })\n        })\n  };\n});\n\n// ----------------------------------------------------------------------\n\nexport default function Label({ color = 'default', variant = 'ghost', children, ...other }) {\n  return (\n    <RootStyle ownerState={{ color, variant }} {...other}>\n      {children}\n    </RootStyle>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf([\n    'default',\n    'primary',\n    'secondary',\n    'info',\n    'success',\n    'warning',\n    'error'\n  ]),\n  variant: PropTypes.oneOf(['filled', 'outlined', 'ghost'])\n};\n","import PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { forwardRef } from 'react';\n// material\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => (\n  <Box ref={ref} {...other}>\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n    {children}\n  </Box>\n));\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React from 'react';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\n\nconst Alert = React.forwardRef(function Alert(\n    props,\n    ref,\n) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nfunction SnackbarApp({ openSnackbar, success, message, setOpenSnackbar }) {\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setOpenSnackbar(false);\n    };\n\n    return (\n        <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleClose}>\n            <Alert onClose={handleClose} severity={success ? 'success' : 'error'} sx={{ width: '100%' }}>\n                {message}\n            </Alert>\n        </Snackbar>\n    )\n}\n\nexport default SnackbarApp\n","import * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Collapse from '@mui/material/Collapse';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport TextField from '@mui/material/TextField';\nimport Label from '../Label';\n\nexport default function ScheduleCard({ data, editSchedule, deleteSchedule }) {\n  const [expanded, setExpanded] = React.useState(false);\n  const [date, setDate] = React.useState(new Date(data.schedule_datetime));\n\n    const options = {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n    };\n\n    const submitOptions = {\n        weekday: 'short',\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n    };\n\n    const handleDateChange = (newValue) => {\n        setDate(newValue);\n    };\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleDateOnBlur = (value) => {\n    editSchedule(data.uid, date.toLocaleString('en-US', submitOptions));\n    setExpanded(!expanded);\n  }\n\n  return (\n    <Card sx={{ maxWidth: 345 }}>\n         <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <CardContent>\n                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                    {date.toLocaleString('en-US', options).split(',')[0]}\n                </Typography>\n                <Typography variant=\"h4\" component=\"div\">\n                    {date.toLocaleString('en-US', options).split(',')[1] + ', ' + date.toLocaleString('en-US', options).split(',')[2]}\n                </Typography>\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    {date.toLocaleString('en-US', options).split(',')[3]}\n                </Typography>\n                <Label variant=\"ghost\" color=\"success\">\n                    Available\n                </Label>\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\" onClick={() => handleExpandClick()}>{!expanded ? \"Edit\" : \"Cancel\"}</Button>\n                <Button size=\"small\" color=\"error\" onClick={event => deleteSchedule(data.uid)}>Delete</Button>\n            </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n            <CardContent>\n                <DateTimePicker\n                    label=\"Date&Time picker\"\n                    value={date}\n                    onChange={handleDateChange}\n                    onAccept={handleDateOnBlur}\n                    renderInput={(params) => <TextField {...params} />}\n                />\n            </CardContent>\n        </Collapse>\n      </LocalizationProvider>\n    </Card>\n  );\n}\n","class ScheduleModel {\n    constructor(uid, username, datetime) {\n        if (datetime !== null) {\n            const date = new Date(datetime);\n            const options = {\n                weekday: 'short',\n                year: 'numeric',\n                month: 'short',\n                day: 'numeric',\n                hour: 'numeric',\n                minute: 'numeric',\n                hour12: true\n            };\n            const datetimeString = date.toLocaleString('en-US', options);\n\n            this.schedule = {\n                barber: username,\n                haircut: 'n/a',\n                is_available: true,\n                schedule_datetime: datetimeString,\n                scheduled_by: 'n/a',\n                time_stamp: `${new Date().getTime()}`,\n                unique_id: uid\n            };\n\n        } else this.schedule = datetime;\n    }\n\n    convertObjectToArray(schedules) {\n        let scheduleList = [];\n        Object.keys(schedules).forEach(obj => {\n            const currSchedule = schedules[obj];\n            currSchedule.uid = obj;\n            scheduleList.push(currSchedule);\n        })\n\n        this.scheduleList = scheduleList;\n    }\n\n    getSchedule() {\n        return this.schedule;\n    }\n\n    getScheduleList() {\n        return this.scheduleList;\n    }\n\n    getUserScheduleList(username) {\n        const userSchedule = this.scheduleList.filter(schedule => schedule.barber === username);\n        return userSchedule;\n    }\n}\n\nexport default ScheduleModel","import React, { useState, useEffect } from 'react';\nimport { Grid, Container, Typography, IconButton, Stack, TextField } from '@mui/material';\nimport DateTimePicker from '@mui/lab/DateTimePicker';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport Page from '../components/Page';\nimport ScheduleCard from '../components/_schedule/ScheduleCard';\nimport SnackbarApp from '../components/Snackbar';\n\n//icons\nimport AddIcon from '@mui/icons-material/Add';\n\n//firebase\nimport { useFirebaseApp } from '../contexts/FirebaseProvider';\nimport { ref, onValue, set } from \"firebase/database\";\nimport ScheduleModel from '../models/ScheduleModel';\n\nfunction Schedule() {\n    const { database, username } = useFirebaseApp();\n    const [date, setDate] = useState(new Date());\n    const [schedules, setSchedules] = useState([]);\n    const [snackbarApp, setSnackBarApp] = useState({\n        openSnackbar: false,\n        success: true,\n        message: ''\n    });\n\n    const handleDateChange = (newValue) => {\n        setDate(newValue);\n    };\n\n    useEffect(() => {\n        onValue(ref(database, 'VerifiedUsers/AvailableSchedule'), (snapshot) => {\n            const data = snapshot.val();\n            const scheduleModel = new ScheduleModel(null, null, null);\n            scheduleModel.convertObjectToArray(data);\n\n            setSchedules(state => scheduleModel.getUserScheduleList(username).sort((a, b) => new Date(a.schedule_datetime).getTime() - new Date(b.schedule_datetime).getTime()));\n        })\n    }, [database, username, snackbarApp])\n\n    function editSchedule(uid, value) {\n        const updatedSchedule = schedules.find(schedule => schedule.uid === uid);\n        if (updatedSchedule !== null) {\n            updatedSchedule.schedule_datetime = value;\n            set(ref(database, 'VerifiedUsers/AvailableSchedule/' + uid), updatedSchedule).then(result => {\n                setSnackBarApp({ ...snackbarApp, openSnackbar: true, success: true, message: 'Schedule was updated successfully.' });\n            }).catch(error => {\n                setSnackBarApp({ ...snackbarApp, openSnackbar: true, success: false, message: 'Failed to update schedule.' });\n            });\n        } else {\n            setSnackBarApp({ ...snackbarApp, openSnackbar: true, success: false, message: 'Schedule does not exist.' });\n        }\n    }\n\n    function addSchedule() {\n        const newUid = Math.random().toString(36).substring(2,12) + Math.random().toString(36).substring(2,12);\n        const newSchedule = new ScheduleModel(newUid, username, date);\n        set(ref(database, 'VerifiedUsers/AvailableSchedule/' + newUid), newSchedule.getSchedule()).then(result => {\n            setSnackBarApp({ ...snackbarApp, openSnackbar: true, success: true, message: 'Schedule was added successfully.' });\n        }).catch(error => {\n            setSnackBarApp({ ...snackbarApp, openSnackbar: true, success: false, message: 'Failed to add schedule.' });\n        })\n    }\n\n    function deleteSchedule(uid) {\n        set(ref(database, 'VerifiedUsers/AvailableSchedule/' + uid), null).then(result => {\n            setSnackBarApp({ ...snackbarApp, openSnackbar: true, success:false, message: 'Schedule was deleted successfully.' });\n        }).catch(error => {\n            setSnackBarApp({ ...snackbarApp, openSnackbar: true, success: false, message: 'Failed to delete schedule.' });\n        })\n    }\n\n    return (\n        <Page title=\"Droidcut | Schedule\">\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <Container>\n                    <Grid container spacing={3} justifyContent=\"space-between\">\n                        <Grid item sm={12} md={5}>\n                            <Typography variant=\"h4\">Schedules</Typography>\n                        </Grid>\n                        <Grid item sm={12} md={5}>\n                            <Stack direction=\"row\" justifyContent=\"end\" sx={{ minWidth: 200 }} spacing={1}>\n                                <DateTimePicker\n                                    label=\"Date&Time picker\"\n                                    value={date}\n                                    onChange={handleDateChange}\n                                    renderInput={(params) => <TextField {...params} />}\n                                />\n                                <IconButton onClick={event => addSchedule()}>\n                                    <AddIcon/>\n                                </IconButton>\n                            </Stack>\n                        </Grid>\n                    </Grid>\n\n                    <Grid container spacing={3} sx={{ mt: 3 }}>\n                        {schedules.map((schedule, index) => \n                            <Grid item xs={12} md={4} key={schedule.uid}>\n                                <ScheduleCard data={schedule} \n                                    editSchedule={(uid, value) => editSchedule(uid, value)} \n                                    deleteSchedule={(uid) => deleteSchedule(uid)}\n                                />\n                            </Grid>\n                        )}\n                    </Grid>\n                </Container>\n            </LocalizationProvider>\n            <SnackbarApp \n                openSnackbar={snackbarApp.openSnackbar}\n                success={snackbarApp.success} \n                message={snackbarApp.message} \n                setOpenSnackbar={value => setSnackBarApp({ ...snackbarApp, openSnackbar: value })} \n            />\n        </Page>\n    )\n}\n\nexport default Schedule\n"],"names":["RootStyle","styled","theme","ownerState","color","variant","height","minWidth","lineHeight","borderRadius","cursor","alignItems","whiteSpace","display","justifyContent","padding","spacing","palette","grey","fontSize","typography","pxToRem","fontFamily","backgroundColor","fontWeight","fontWeightBold","contrastText","main","styleFilled","border","styleOutlined","dark","alpha","styleGhost","text","primary","secondary","Label","children","other","Page","forwardRef","ref","title","propTypes","PropTypes","Alert","React","props","elevation","openSnackbar","success","message","setOpenSnackbar","handleClose","event","reason","open","autoHideDuration","onClose","severity","sx","width","ScheduleCard","data","editSchedule","deleteSchedule","expanded","setExpanded","Date","schedule_datetime","date","setDate","options","weekday","year","month","day","hour","minute","hour12","submitOptions","Card","maxWidth","LocalizationProvider","dateAdapter","AdapterDateFns","CardContent","Typography","gutterBottom","toLocaleString","split","component","mb","CardActions","Button","size","onClick","uid","Collapse","in","timeout","unmountOnExit","DateTimePicker","label","value","onChange","newValue","onAccept","renderInput","params","TextField","ScheduleModel","username","datetime","datetimeString","this","schedule","barber","haircut","is_available","scheduled_by","time_stamp","getTime","unique_id","schedules","scheduleList","Object","keys","forEach","obj","currSchedule","push","filter","useFirebaseApp","database","useState","setSchedules","snackbarApp","setSnackBarApp","useEffect","onValue","snapshot","val","scheduleModel","convertObjectToArray","state","getUserScheduleList","sort","a","b","Container","Grid","container","item","sm","md","Stack","direction","IconButton","newUid","Math","random","toString","substring","newSchedule","set","getSchedule","then","result","catch","error","addSchedule","Add","mt","map","index","xs","updatedSchedule","find","Snackbar"],"sourceRoot":""}