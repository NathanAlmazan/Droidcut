{"version":3,"file":"static/js/65.21e00b44.chunk.js","mappings":"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","sources":["components/authentication/register/RegisterForm.js","pages/Register.js"],"sourcesContent":["import * as Yup from 'yup';\nimport { useState } from 'react';\nimport { Icon } from '@iconify/react';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\n// material\nimport { Stack, TextField, IconButton, InputAdornment, Typography } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n\n// ----------------------------------------------------------------------\n\nexport default function RegisterForm({ signupUser, error }) {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const RegisterSchema = Yup.object().shape({\n    firstName: Yup.string()\n      .min(2, 'Too Short!')\n      .max(50, 'Too Long!')\n      .required('First name required'),\n    lastName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Last name required'),\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n    },\n    validationSchema: RegisterSchema,\n    onSubmit: (value) => {\n      const username = value.firstName + ' ' + value.lastName\n      signupUser(username, value.email, value.password);\n    }\n  });\n\n  const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n            <TextField\n              fullWidth\n              label=\"First name\"\n              {...getFieldProps('firstName')}\n              error={Boolean(touched.firstName && errors.firstName)}\n              helperText={touched.firstName && errors.firstName}\n            />\n\n            <TextField\n              fullWidth\n              label=\"Last name\"\n              {...getFieldProps('lastName')}\n              error={Boolean(touched.lastName && errors.lastName)}\n              helperText={touched.lastName && errors.lastName}\n            />\n          </Stack>\n\n          <TextField\n            fullWidth\n            autoComplete=\"username\"\n            type=\"email\"\n            label=\"Email address\"\n            {...getFieldProps('email')}\n            error={Boolean(touched.email && errors.email)}\n            helperText={touched.email && errors.email}\n          />\n\n          <TextField\n            fullWidth\n            autoComplete=\"current-password\"\n            type={showPassword ? 'text' : 'password'}\n            label=\"Password\"\n            {...getFieldProps('password')}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            error={Boolean(touched.password && errors.password)}\n            helperText={touched.password && errors.password}\n          />\n\n          {error !== null && (\n            <Typography color=\"error\" variant=\"body2\">{error}</Typography>\n          )}\n\n          <LoadingButton\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n            loading={isSubmitting && !error}\n          >\n            Register\n          </LoadingButton>\n        </Stack>\n      </Form>\n    </FormikProvider>\n  );\n}\n","import React from 'react';\nimport { useFirebaseApp } from '../contexts/FirebaseProvider';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Box, Link, Container, Typography } from '@mui/material';\n// layouts\nimport AuthLayout from '../layouts/AuthLayout';\n// components\nimport Page from '../components/Page';\nimport { MHidden } from '../components/@material-extend';\nimport { RegisterForm } from '../components/authentication/register';\n\n//firebase\nimport { ref, set } from \"firebase/database\";\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  [theme.breakpoints.up('md')]: {\n    display: 'flex'\n  }\n}));\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 480,\n  margin: 'auto',\n  display: 'flex',\n  minHeight: '100vh',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(12, 0)\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function Register() {\n  const navigate = useNavigate();\n  const { signupUser, database, currentUser, setCurrentUsername } = useFirebaseApp();\n  const [error, setError] = React.useState(null);\n\n  React.useEffect(() => {\n    if (currentUser !== null) {\n      navigate('/dashboard/app');\n    }\n  }, [currentUser, navigate])\n\n  function saveAsAdmin(uid, username, password) {\n    set(ref(database, 'VerifiedAdmin/Admins/' + uid), {\n      username: username,\n      password: password\n    }).then(response => {\n      setError(null);\n      setCurrentUsername(username);\n      navigate('/login');\n    }).catch(error => {\n      setError(\"Failed to save account.\")\n    })\n  }\n\n  function signup(username, email, password) {\n    signupUser(email, password).then(response => {\n      setError(null);\n      saveAsAdmin(response.user.uid, username, password);\n    }).catch(error => {\n      if (password.length < 8) {\n        setError(\"Weak password. Please try again.\");\n      } else {\n        setError(\"User already exists.\");\n      }\n    });\n  } \n\n\n  return (\n    <RootStyle title=\"Register | Droidcut\">\n      <AuthLayout>\n        Already have an account? &nbsp;\n        <Link underline=\"none\" variant=\"subtitle2\" component={RouterLink} to=\"/login\">\n          Login\n        </Link>\n      </AuthLayout>\n\n      <Container>\n        <ContentStyle>\n          <Box sx={{ mb: 5 }}>\n            <Typography variant=\"h4\" gutterBottom>\n              Welcome to Droidcut!\n            </Typography>\n            <Typography sx={{ color: 'text.secondary' }}>\n              Signup as a new Barber of Droidcut.\n            </Typography>\n          </Box>\n\n          <RegisterForm signupUser={(username, email, password) => signup(username, email, password)} error={error} />\n\n          <Typography variant=\"body2\" align=\"center\" sx={{ color: 'text.secondary', mt: 3 }}>\n            By registering, I agree to Minimal&nbsp;\n            <Link underline=\"always\" sx={{ color: 'text.primary' }}>\n              Terms of Service\n            </Link>\n            &nbsp;and&nbsp;\n            <Link underline=\"always\" sx={{ color: 'text.primary' }}>\n              Privacy Policy\n            </Link>\n            .\n          </Typography>\n\n          <MHidden width=\"smUp\">\n            <Typography variant=\"subtitle2\" sx={{ mt: 3, textAlign: 'center' }}>\n              Already have an account?&nbsp;\n              <Link to=\"/login\" component={RouterLink}>\n                Login\n              </Link>\n            </Typography>\n          </MHidden>\n        </ContentStyle>\n      </Container>\n    </RootStyle>\n  );\n}\n"],"names":["RegisterForm","signupUser","error","useState","showPassword","setShowPassword","RegisterSchema","Yup","shape","firstName","min","max","required","lastName","email","password","formik","useFormik","initialValues","validationSchema","onSubmit","value","username","errors","touched","handleSubmit","isSubmitting","getFieldProps","autoComplete","noValidate","Stack","spacing","direction","xs","sm","TextField","fullWidth","label","Boolean","helperText","type","InputProps","endAdornment","InputAdornment","position","IconButton","edge","onClick","prev","icon","eyeFill","eyeOffFill","Typography","color","variant","LoadingButton","size","loading","RootStyle","styled","Page","theme","breakpoints","up","display","ContentStyle","maxWidth","margin","minHeight","flexDirection","justifyContent","padding","Register","navigate","useNavigate","useFirebaseApp","database","currentUser","setCurrentUsername","React","setError","signup","then","response","uid","set","ref","catch","saveAsAdmin","user","length","title","AuthLayout","Link","underline","component","RouterLink","to","Container","Box","sx","mb","gutterBottom","align","mt","width","textAlign"],"sourceRoot":""}