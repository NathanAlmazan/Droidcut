{"version":3,"file":"static/js/130.917162b4.chunk.js","mappings":"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","sources":["components/Page.js","components/_customers/CustomerCard.js","pages/Customers.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { forwardRef } from 'react';\n// material\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => (\n  <Box ref={ref} {...other}>\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n    {children}\n  </Box>\n));\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React from 'react';\nimport { capitalCase } from 'change-case';\nimport { Box, Typography } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Collapse from '@mui/material/Collapse';\nimport Avatar from '@mui/material/Avatar';\nimport { styled } from '@mui/material/styles';\nimport IconButton from '@mui/material/IconButton';\nimport { red } from '@mui/material/colors';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nconst ExpandMore = styled((props) => {\n    const { expand, ...other } = props;\n    return <IconButton {...other} />;\n  })(({ theme, expand }) => ({\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n}));\n\nfunction CustomerCard({ customer }) {\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    return (\n        <Card sx={{ maxWidth: '90%' }}>\n            <CardHeader\n                avatar={\n                <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\n                    {capitalCase(customer.user[0])}\n                </Avatar>\n                }\n                title={capitalCase(customer.user)}\n                subheader={customer.email}\n            />\n            <CardActions disableSpacing>\n                <Typography variant=\"body2\">Expand to read {capitalCase(customer.user.split(' ')[0])}'s feedbacks</Typography>\n                <ExpandMore\n                    expand={expanded}\n                    onClick={handleExpandClick}\n                    aria-expanded={expanded}\n                    aria-label=\"show more\"\n                    >\n                    <ExpandMoreIcon />\n                </ExpandMore>\n            </CardActions>\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                <CardContent>\n                    {customer.feedbacks.map((feedback, index) =>\n                        <Box key={index}>\n                            <Typography paragraph><strong>Feedback</strong></Typography>\n                            <Typography paragraph>\n                                {feedback.message}\n                            </Typography>\n                        </Box>    \n                    )}\n                </CardContent>\n            </Collapse>\n        </Card>\n    )\n}\n\nexport default CustomerCard\n","import React, { useEffect, useState } from 'react';\nimport { Box, Grid, Container, Typography } from '@mui/material';\nimport Page from '../components/Page';\nimport CustomerCard from '../components/_customers/CustomerCard';\n\n//firebase\nimport { useFirebaseApp } from '../contexts/FirebaseProvider';\nimport { ref, onValue } from \"firebase/database\";\n\n\n\n\nfunction Customers() {\n    const [customers, setCustomers] = useState([]);\n    const { database } = useFirebaseApp();\n\n    useEffect(() => {\n        onValue(ref(database, 'VerifiedUsers/User'), (snapshot) => {\n            const users = snapshot.val();\n            let userList = [];\n            Object.keys(users).forEach(obj => {\n                const currUser = users[obj];\n                currUser.uid = obj;\n                userList.push(currUser);\n            });\n\n            onValue(ref(database, 'VerifiedUsers/Feedbacks'), (snapshot) => {\n                const feedbacks = snapshot.val();\n                let feedbackList = [];\n                Object.keys(feedbacks).forEach(obj => {\n                    const currFeedback = feedbacks[obj];\n                    currFeedback.uid = obj;\n                    feedbackList.push(currFeedback);\n                });\n\n                console.log(feedbackList);\n\n                let customerList = [];\n\n                userList.forEach(user => {\n                    const userFeedbacks = feedbackList.filter(feedback => feedback.email.split('@')[0].normalize() === user.email.split('@')[0].normalize());\n                    user.feedbacks = userFeedbacks;\n                    customerList.push(user);\n                })\n\n                setCustomers(state => customerList);\n            })\n        })\n    }, [database])\n\n    console.log(customers);\n\n    return (\n        <Page title=\"Droidcut | Customers\">\n                <Container>\n                    <Box sx={{ display: 'flex', justifyContent: 'start' }}>\n                        <Typography variant=\"h4\">Customers</Typography>\n                    </Box>\n\n                    <Grid container spacing={3} sx={{ mt: 3 }}>\n                       {customers.map(customer => (\n                        <Grid item xs={12} md={6} key={customer.email}>\n                            <CustomerCard customer={customer} />\n                        </Grid>\n                       ))} \n                    </Grid>\n                </Container>\n        </Page>\n    )\n}\n\nexport default Customers\n"],"names":["Page","forwardRef","ref","children","title","other","propTypes","PropTypes","ExpandMore","styled","props","expand","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","customer","React","expanded","setExpanded","Card","sx","maxWidth","CardHeader","avatar","Avatar","bgcolor","red","capitalCase","user","subheader","email","CardActions","disableSpacing","Typography","variant","split","onClick","Collapse","in","timeout","unmountOnExit","CardContent","feedbacks","map","feedback","index","Box","paragraph","message","useState","customers","setCustomers","database","useFirebaseApp","useEffect","onValue","snapshot","users","val","userList","Object","keys","forEach","obj","currUser","uid","push","feedbackList","currFeedback","console","log","customerList","userFeedbacks","filter","normalize","state","Container","display","justifyContent","Grid","container","spacing","mt","item","xs","md"],"sourceRoot":""}