{"version":3,"file":"static/js/234.4e41d6e9.chunk.js","mappings":"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","sources":["../node_modules/@iconify/react/dist/iconify.esm.js"],"sourcesContent":["import React from 'react';\n\nfunction createCommonjsModule(fn) {\n  var module = { exports: {} };\n\treturn fn(module, module.exports), module.exports;\n}\n\nvar icon = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fullIcon = exports.iconDefaults = exports.minifyProps = exports.matchName = void 0;\n/**\n * Expression to test part of icon name.\n */\nexports.matchName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\n/**\n * Properties that can be minified\n *\n * Values of all these properties are awalys numbers\n */\nexports.minifyProps = [\n    // All IconifyDimenisons properties\n    'width',\n    'height',\n    'top',\n    'left',\n];\n/**\n * Default values for all optional IconifyIcon properties\n */\nexports.iconDefaults = Object.freeze({\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16,\n    rotate: 0,\n    vFlip: false,\n    hFlip: false,\n});\n/**\n * Add optional properties to icon\n */\nfunction fullIcon(data) {\n    return { ...exports.iconDefaults, ...data };\n}\nexports.fullIcon = fullIcon;\n});\n\nvar name = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateIcon = exports.stringToIcon = void 0;\n\n/**\n * Convert string to Icon object.\n */\nconst stringToIcon = (value, validate, allowSimpleName, provider = '') => {\n    const colonSeparated = value.split(':');\n    // Check for provider with correct '@' at start\n    if (value.slice(0, 1) === '@') {\n        // First part is provider\n        if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n            // \"@provider:prefix:name\" or \"@provider:prefix-name\"\n            return null;\n        }\n        provider = colonSeparated.shift().slice(1);\n    }\n    // Check split by colon: \"prefix:name\", \"provider:prefix:name\"\n    if (colonSeparated.length > 3 || !colonSeparated.length) {\n        return null;\n    }\n    if (colonSeparated.length > 1) {\n        // \"prefix:name\"\n        const name = colonSeparated.pop();\n        const prefix = colonSeparated.pop();\n        const result = {\n            // Allow provider without '@': \"provider:prefix:name\"\n            provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n            prefix,\n            name,\n        };\n        return validate && !exports.validateIcon(result) ? null : result;\n    }\n    // Attempt to split by dash: \"prefix-name\"\n    const name = colonSeparated[0];\n    const dashSeparated = name.split('-');\n    if (dashSeparated.length > 1) {\n        const result = {\n            provider: provider,\n            prefix: dashSeparated.shift(),\n            name: dashSeparated.join('-'),\n        };\n        return validate && !exports.validateIcon(result) ? null : result;\n    }\n    // If allowEmpty is set, allow empty provider and prefix, allowing names like \"home\"\n    if (allowSimpleName && provider === '') {\n        const result = {\n            provider: provider,\n            prefix: '',\n            name,\n        };\n        return validate && !exports.validateIcon(result, allowSimpleName)\n            ? null\n            : result;\n    }\n    return null;\n};\nexports.stringToIcon = stringToIcon;\n/**\n * Check if icon is valid.\n *\n * This function is not part of stringToIcon because validation is not needed for most code.\n */\nconst validateIcon = (icon$1, allowSimpleName) => {\n    if (!icon$1) {\n        return false;\n    }\n    return !!((icon$1.provider === '' || icon$1.provider.match(icon.matchName)) &&\n        ((allowSimpleName && icon$1.prefix === '') ||\n            icon$1.prefix.match(icon.matchName)) &&\n        icon$1.name.match(icon.matchName));\n};\nexports.validateIcon = validateIcon;\n});\n\nvar merge = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeIconData = void 0;\n\n/**\n * Merge icon and alias\n */\nfunction mergeIconData(icon$1, alias) {\n    const result = { ...icon$1 };\n    for (const key in icon.iconDefaults) {\n        const prop = key;\n        if (alias[prop] !== void 0) {\n            const value = alias[prop];\n            if (result[prop] === void 0) {\n                // Missing value\n                result[prop] = value;\n                continue;\n            }\n            switch (prop) {\n                case 'rotate':\n                    result[prop] =\n                        (result[prop] + value) % 4;\n                    break;\n                case 'hFlip':\n                case 'vFlip':\n                    result[prop] = value !== result[prop];\n                    break;\n                default:\n                    // Overwrite value\n                    result[prop] =\n                        value;\n            }\n        }\n    }\n    return result;\n}\nexports.mergeIconData = mergeIconData;\n});\n\nvar parse = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseIconSet = void 0;\n\n\n/**\n * Get list of defaults keys\n */\nconst defaultsKeys = Object.keys(icon.iconDefaults);\n/**\n * Resolve alias\n */\nfunction resolveAlias(alias, icons, aliases, level = 0) {\n    const parent = alias.parent;\n    if (icons[parent] !== void 0) {\n        return merge.mergeIconData(icons[parent], alias);\n    }\n    if (aliases[parent] !== void 0) {\n        if (level > 2) {\n            // icon + alias + alias + alias = too much nesting, possibly infinite\n            return null;\n        }\n        const icon = resolveAlias(aliases[parent], icons, aliases, level + 1);\n        if (icon) {\n            return merge.mergeIconData(icon, alias);\n        }\n    }\n    return null;\n}\n/**\n * Extract icons from an icon set\n */\nfunction parseIconSet(data, callback, list = 'none') {\n    const added = [];\n    // Must be an object\n    if (typeof data !== 'object') {\n        return list === 'none' ? false : added;\n    }\n    // Check for missing icons list returned by API\n    if (data.not_found instanceof Array) {\n        data.not_found.forEach((name) => {\n            callback(name, null);\n            if (list === 'all') {\n                added.push(name);\n            }\n        });\n    }\n    // Must have 'icons' object\n    if (typeof data.icons !== 'object') {\n        return list === 'none' ? false : added;\n    }\n    // Get default values\n    const defaults = Object.create(null);\n    defaultsKeys.forEach((key) => {\n        if (data[key] !== void 0 && typeof data[key] !== 'object') {\n            defaults[key] = data[key];\n        }\n    });\n    // Get icons\n    const icons = data.icons;\n    Object.keys(icons).forEach((name) => {\n        const icon$1 = icons[name];\n        if (typeof icon$1.body !== 'string') {\n            return;\n        }\n        // Freeze icon to make sure it will not be modified\n        callback(name, Object.freeze({ ...icon.iconDefaults, ...defaults, ...icon$1 }));\n        added.push(name);\n    });\n    // Get aliases\n    if (typeof data.aliases === 'object') {\n        const aliases = data.aliases;\n        Object.keys(aliases).forEach((name) => {\n            const icon$1 = resolveAlias(aliases[name], icons, aliases, 1);\n            if (icon$1) {\n                // Freeze icon to make sure it will not be modified\n                callback(name, Object.freeze({ ...icon.iconDefaults, ...defaults, ...icon$1 }));\n                added.push(name);\n            }\n        });\n    }\n    return list === 'none' ? added.length > 0 : added;\n}\nexports.parseIconSet = parseIconSet;\n});\n\nvar storage_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.listIcons = exports.getIcon = exports.iconExists = exports.addIcon = exports.addIconSet = exports.getStorage = exports.newStorage = void 0;\n\n\n/**\n * Storage by provider and prefix\n */\nconst storage = Object.create(null);\n/**\n * Create new storage\n */\nfunction newStorage(provider, prefix) {\n    return {\n        provider,\n        prefix,\n        icons: Object.create(null),\n        missing: Object.create(null),\n    };\n}\nexports.newStorage = newStorage;\n/**\n * Get storage for provider and prefix\n */\nfunction getStorage(provider, prefix) {\n    if (storage[provider] === void 0) {\n        storage[provider] = Object.create(null);\n    }\n    const providerStorage = storage[provider];\n    if (providerStorage[prefix] === void 0) {\n        providerStorage[prefix] = newStorage(provider, prefix);\n    }\n    return providerStorage[prefix];\n}\nexports.getStorage = getStorage;\n/**\n * Add icon set to storage\n *\n * Returns array of added icons if 'list' is true and icons were added successfully\n */\nfunction addIconSet(storage, data, list = 'none') {\n    const t = Date.now();\n    return parse.parseIconSet(data, (name, icon) => {\n        if (icon === null) {\n            storage.missing[name] = t;\n        }\n        else {\n            storage.icons[name] = icon;\n        }\n    }, list);\n}\nexports.addIconSet = addIconSet;\n/**\n * Add icon to storage\n */\nfunction addIcon(storage, name, icon$1) {\n    try {\n        if (typeof icon$1.body === 'string') {\n            // Freeze icon to make sure it will not be modified\n            storage.icons[name] = Object.freeze(icon.fullIcon(icon$1));\n            return true;\n        }\n    }\n    catch (err) {\n        // Do nothing\n    }\n    return false;\n}\nexports.addIcon = addIcon;\n/**\n * Check if icon exists\n */\nfunction iconExists(storage, name) {\n    return storage.icons[name] !== void 0;\n}\nexports.iconExists = iconExists;\n/**\n * Get icon data\n */\nfunction getIcon(storage, name) {\n    const value = storage.icons[name];\n    return value === void 0 ? null : value;\n}\nexports.getIcon = getIcon;\n/**\n * List available icons\n */\nfunction listIcons(provider, prefix) {\n    let allIcons = [];\n    // Get providers\n    let providers;\n    if (typeof provider === 'string') {\n        providers = [provider];\n    }\n    else {\n        providers = Object.keys(storage);\n    }\n    // Get all icons\n    providers.forEach((provider) => {\n        let prefixes;\n        if (typeof provider === 'string' && typeof prefix === 'string') {\n            prefixes = [prefix];\n        }\n        else {\n            prefixes =\n                storage[provider] === void 0\n                    ? []\n                    : Object.keys(storage[provider]);\n        }\n        prefixes.forEach((prefix) => {\n            const storage = getStorage(provider, prefix);\n            const icons = Object.keys(storage.icons).map((name) => (provider !== '' ? '@' + provider + ':' : '') +\n                prefix +\n                ':' +\n                name);\n            allIcons = allIcons.concat(icons);\n        });\n    });\n    return allIcons;\n}\nexports.listIcons = listIcons;\n});\n\nvar functions$3 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storageFunctions = exports.addCollection = exports.addIcon = exports.getIconData = exports.allowSimpleNames = void 0;\n\n\n\n/**\n * Allow storing icons without provider or prefix, making it possible to store icons like \"home\"\n */\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n    if (typeof allow === 'boolean') {\n        simpleNames = allow;\n    }\n    return simpleNames;\n}\nexports.allowSimpleNames = allowSimpleNames;\n/**\n * Get icon data\n */\nfunction getIconData(name$1) {\n    const icon = typeof name$1 === 'string' ? name.stringToIcon(name$1, true, simpleNames) : name$1;\n    return icon\n        ? storage_1.getIcon(storage_1.getStorage(icon.provider, icon.prefix), icon.name)\n        : null;\n}\nexports.getIconData = getIconData;\n/**\n * Add one icon\n */\nfunction addIcon(name$1, data) {\n    const icon = name.stringToIcon(name$1, true, simpleNames);\n    if (!icon) {\n        return false;\n    }\n    const storage = storage_1.getStorage(icon.provider, icon.prefix);\n    return storage_1.addIcon(storage, icon.name, data);\n}\nexports.addIcon = addIcon;\n/**\n * Add icon set\n */\nfunction addCollection(data, provider) {\n    if (typeof data !== 'object') {\n        return false;\n    }\n    // Get provider\n    if (typeof provider !== 'string') {\n        provider = typeof data.provider === 'string' ? data.provider : '';\n    }\n    // Check for simple names: requires empty provider and prefix\n    if (simpleNames &&\n        provider === '' &&\n        (typeof data.prefix !== 'string' || data.prefix === '')) {\n        // Simple names: add icons one by one\n        let added = false;\n        parse.parseIconSet(data, (name, icon) => {\n            if (icon !== null && addIcon(name, icon)) {\n                added = true;\n            }\n        });\n        return added;\n    }\n    // Validate provider and prefix\n    if (typeof data.prefix !== 'string' ||\n        !name.validateIcon({\n            provider,\n            prefix: data.prefix,\n            name: 'a',\n        })) {\n        return false;\n    }\n    const storage = storage_1.getStorage(provider, data.prefix);\n    return !!storage_1.addIconSet(storage, data);\n}\nexports.addCollection = addCollection;\n/**\n * Export\n */\nexports.storageFunctions = {\n    // Check if icon exists\n    iconExists: (name) => getIconData(name) !== null,\n    // Get raw icon data\n    getIcon: (name) => {\n        const result = getIconData(name);\n        return result ? { ...result } : null;\n    },\n    // List icons\n    listIcons: storage_1.listIcons,\n    // Add icon\n    addIcon,\n    // Add icon set\n    addCollection,\n};\n});\n\nvar id = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.replaceIDs = void 0;\n/**\n * Regular expression for finding ids\n */\nconst regex = /\\sid=\"(\\S+)\"/g;\n/**\n * Match for allowed characters before and after id in replacement, including () for group\n */\nconst replaceValue = '([^A-Za-z0-9_-])';\n/**\n * Escape value for 'new RegExp()'\n */\nfunction escapeRegExp(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n/**\n * New random-ish prefix for ids\n */\nconst randomPrefix = 'IconifyId-' +\n    Date.now().toString(16) +\n    '-' +\n    ((Math.random() * 0x1000000) | 0).toString(16) +\n    '-';\n/**\n * Counter for ids, increasing with every replacement\n */\nlet counter = 0;\n/**\n * Replace IDs in SVG output with unique IDs\n * Fast replacement without parsing XML, assuming commonly used patterns and clean XML (icon should have been cleaned up with Iconify Tools or SVGO).\n */\nfunction replaceIDs(body, prefix = randomPrefix) {\n    // Find all IDs\n    const ids = [];\n    let match;\n    while ((match = regex.exec(body))) {\n        ids.push(match[1]);\n    }\n    if (!ids.length) {\n        return body;\n    }\n    // Replace with unique ids\n    ids.forEach((id) => {\n        const newID = typeof prefix === 'function' ? prefix() : prefix + counter++;\n        body = body.replace(new RegExp(replaceValue + '(' + escapeRegExp(id) + ')' + replaceValue, 'g'), '$1' + newID + '$3');\n    });\n    return body;\n}\nexports.replaceIDs = replaceIDs;\n});\n\nvar size = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateSize = void 0;\n/**\n * Regular expressions for calculating dimensions\n */\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\n/**\n * Calculate second dimension when only 1 dimension is set\n *\n * @param {string|number} size One dimension (such as width)\n * @param {number} ratio Width/height ratio.\n *      If size is width, ratio = height/width\n *      If size is height, ratio = width/height\n * @param {number} [precision] Floating number precision in result to minimize output. Default = 2\n * @return {string|number} Another dimension\n */\nfunction calculateSize(size, ratio, precision) {\n    if (ratio === 1) {\n        return size;\n    }\n    precision = precision === void 0 ? 100 : precision;\n    if (typeof size === 'number') {\n        return Math.ceil(size * ratio * precision) / precision;\n    }\n    if (typeof size !== 'string') {\n        return size;\n    }\n    // Split code into sets of strings and numbers\n    const oldParts = size.split(unitsSplit);\n    if (oldParts === null || !oldParts.length) {\n        return size;\n    }\n    const newParts = [];\n    let code = oldParts.shift();\n    let isNumber = unitsTest.test(code);\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        if (isNumber) {\n            const num = parseFloat(code);\n            if (isNaN(num)) {\n                newParts.push(code);\n            }\n            else {\n                newParts.push(Math.ceil(num * ratio * precision) / precision);\n            }\n        }\n        else {\n            newParts.push(code);\n        }\n        // next\n        code = oldParts.shift();\n        if (code === void 0) {\n            return newParts.join('');\n        }\n        isNumber = !isNumber;\n    }\n}\nexports.calculateSize = calculateSize;\n});\n\nvar customisations = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeCustomisations = exports.defaults = void 0;\n/**\n * Default icon customisations values\n */\nexports.defaults = Object.freeze({\n    // Display mode\n    inline: false,\n    // Dimensions\n    width: null,\n    height: null,\n    // Alignment\n    hAlign: 'center',\n    vAlign: 'middle',\n    slice: false,\n    // Transformations\n    hFlip: false,\n    vFlip: false,\n    rotate: 0,\n});\n/**\n * Convert IconifyIconCustomisations to FullIconCustomisations\n */\nfunction mergeCustomisations(defaults, item) {\n    const result = {};\n    for (const key in defaults) {\n        const attr = key;\n        // Copy old value\n        result[attr] = defaults[attr];\n        if (item[attr] === void 0) {\n            continue;\n        }\n        // Validate new value\n        const value = item[attr];\n        switch (attr) {\n            // Boolean attributes that override old value\n            case 'inline':\n            case 'slice':\n                if (typeof value === 'boolean') {\n                    result[attr] = value;\n                }\n                break;\n            // Boolean attributes that are merged\n            case 'hFlip':\n            case 'vFlip':\n                if (value === true) {\n                    result[attr] = !result[attr];\n                }\n                break;\n            // Non-empty string\n            case 'hAlign':\n            case 'vAlign':\n                if (typeof value === 'string' && value !== '') {\n                    result[attr] = value;\n                }\n                break;\n            // Non-empty string / non-zero number / null\n            case 'width':\n            case 'height':\n                if ((typeof value === 'string' && value !== '') ||\n                    (typeof value === 'number' && value) ||\n                    value === null) {\n                    result[attr] = value;\n                }\n                break;\n            // Rotation\n            case 'rotate':\n                if (typeof value === 'number') {\n                    result[attr] += value;\n                }\n                break;\n        }\n    }\n    return result;\n}\nexports.mergeCustomisations = mergeCustomisations;\n});\n\nvar build = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.iconToSVG = void 0;\n\n/**\n * Get preserveAspectRatio value\n */\nfunction preserveAspectRatio(props) {\n    let result = '';\n    switch (props.hAlign) {\n        case 'left':\n            result += 'xMin';\n            break;\n        case 'right':\n            result += 'xMax';\n            break;\n        default:\n            result += 'xMid';\n    }\n    switch (props.vAlign) {\n        case 'top':\n            result += 'YMin';\n            break;\n        case 'bottom':\n            result += 'YMax';\n            break;\n        default:\n            result += 'YMid';\n    }\n    result += props.slice ? ' slice' : ' meet';\n    return result;\n}\n/**\n * Get SVG attributes and content from icon + customisations\n *\n * Does not generate style to make it compatible with frameworks that use objects for style, such as React.\n * Instead, it generates 'inline' value. If true, rendering engine should add verticalAlign: -0.125em to icon.\n *\n * Customisations should be normalised by platform specific parser.\n * Result should be converted to <svg> by platform specific parser.\n * Use replaceIDs to generate unique IDs for body.\n */\nfunction iconToSVG(icon, customisations) {\n    // viewBox\n    const box = {\n        left: icon.left,\n        top: icon.top,\n        width: icon.width,\n        height: icon.height,\n    };\n    // Body\n    let body = icon.body;\n    // Apply transformations\n    [icon, customisations].forEach((props) => {\n        const transformations = [];\n        const hFlip = props.hFlip;\n        const vFlip = props.vFlip;\n        let rotation = props.rotate;\n        // Icon is flipped first, then rotated\n        if (hFlip) {\n            if (vFlip) {\n                rotation += 2;\n            }\n            else {\n                // Horizontal flip\n                transformations.push('translate(' +\n                    (box.width + box.left) +\n                    ' ' +\n                    (0 - box.top) +\n                    ')');\n                transformations.push('scale(-1 1)');\n                box.top = box.left = 0;\n            }\n        }\n        else if (vFlip) {\n            // Vertical flip\n            transformations.push('translate(' +\n                (0 - box.left) +\n                ' ' +\n                (box.height + box.top) +\n                ')');\n            transformations.push('scale(1 -1)');\n            box.top = box.left = 0;\n        }\n        let tempValue;\n        if (rotation < 0) {\n            rotation -= Math.floor(rotation / 4) * 4;\n        }\n        rotation = rotation % 4;\n        switch (rotation) {\n            case 1:\n                // 90deg\n                tempValue = box.height / 2 + box.top;\n                transformations.unshift('rotate(90 ' + tempValue + ' ' + tempValue + ')');\n                break;\n            case 2:\n                // 180deg\n                transformations.unshift('rotate(180 ' +\n                    (box.width / 2 + box.left) +\n                    ' ' +\n                    (box.height / 2 + box.top) +\n                    ')');\n                break;\n            case 3:\n                // 270deg\n                tempValue = box.width / 2 + box.left;\n                transformations.unshift('rotate(-90 ' + tempValue + ' ' + tempValue + ')');\n                break;\n        }\n        if (rotation % 2 === 1) {\n            // Swap width/height and x/y for 90deg or 270deg rotation\n            if (box.left !== 0 || box.top !== 0) {\n                tempValue = box.left;\n                box.left = box.top;\n                box.top = tempValue;\n            }\n            if (box.width !== box.height) {\n                tempValue = box.width;\n                box.width = box.height;\n                box.height = tempValue;\n            }\n        }\n        if (transformations.length) {\n            body =\n                '<g transform=\"' +\n                    transformations.join(' ') +\n                    '\">' +\n                    body +\n                    '</g>';\n        }\n    });\n    // Calculate dimensions\n    let width, height;\n    if (customisations.width === null && customisations.height === null) {\n        // Set height to '1em', calculate width\n        height = '1em';\n        width = size.calculateSize(height, box.width / box.height);\n    }\n    else if (customisations.width !== null &&\n        customisations.height !== null) {\n        // Values are set\n        width = customisations.width;\n        height = customisations.height;\n    }\n    else if (customisations.height !== null) {\n        // Height is set\n        height = customisations.height;\n        width = size.calculateSize(height, box.width / box.height);\n    }\n    else {\n        // Width is set\n        width = customisations.width;\n        height = size.calculateSize(width, box.height / box.width);\n    }\n    // Check for 'auto'\n    if (width === 'auto') {\n        width = box.width;\n    }\n    if (height === 'auto') {\n        height = box.height;\n    }\n    // Convert to string\n    width = typeof width === 'string' ? width : width + '';\n    height = typeof height === 'string' ? height : height + '';\n    // Result\n    const result = {\n        attributes: {\n            width,\n            height,\n            preserveAspectRatio: preserveAspectRatio(customisations),\n            viewBox: box.left + ' ' + box.top + ' ' + box.width + ' ' + box.height,\n        },\n        body,\n    };\n    if (customisations.inline) {\n        result.inline = true;\n    }\n    return result;\n}\nexports.iconToSVG = iconToSVG;\n});\n\nvar functions$2 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.builderFunctions = void 0;\n\n\n\n\n\n/**\n * Exported builder functions\n */\nexports.builderFunctions = {\n    replaceIDs: id.replaceIDs,\n    calculateSize: size.calculateSize,\n    buildIcon: (icon$1, customisations$1) => {\n        return build.iconToSVG(icon.fullIcon(icon$1), customisations.mergeCustomisations(customisations.defaults, customisations$1));\n    },\n};\n});\n\nvar modules$1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.coreModules = void 0;\nexports.coreModules = {};\n});\n\nvar config$1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultConfig = void 0;\n/**\n * Default RedundancyConfig for API calls\n */\nexports.defaultConfig = {\n    resources: [],\n    index: 0,\n    timeout: 2000,\n    rotate: 750,\n    random: false,\n    dataAfterTimeout: false,\n};\n});\n\nvar query = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sendQuery = void 0;\n/**\n * Send query\n */\nfunction sendQuery(config, payload, query, done, success) {\n    // Get number of resources\n    const resourcesCount = config.resources.length;\n    // Save start index\n    const startIndex = config.random\n        ? Math.floor(Math.random() * resourcesCount)\n        : config.index;\n    // Get resources\n    let resources;\n    if (config.random) {\n        // Randomise array\n        let list = config.resources.slice(0);\n        resources = [];\n        while (list.length > 1) {\n            const nextIndex = Math.floor(Math.random() * list.length);\n            resources.push(list[nextIndex]);\n            list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n        }\n        resources = resources.concat(list);\n    }\n    else {\n        // Rearrange resources to start with startIndex\n        resources = config.resources\n            .slice(startIndex)\n            .concat(config.resources.slice(0, startIndex));\n    }\n    // Counters, status\n    const startTime = Date.now();\n    let status = 'pending';\n    let queriesSent = 0;\n    let lastError = void 0;\n    // Timer\n    let timer = null;\n    // Execution queue\n    let queue = [];\n    // Callbacks to call when query is complete\n    let doneCallbacks = [];\n    if (typeof done === 'function') {\n        doneCallbacks.push(done);\n    }\n    /**\n     * Reset timer\n     */\n    function resetTimer() {\n        if (timer) {\n            clearTimeout(timer);\n            timer = null;\n        }\n    }\n    /**\n     * Abort everything\n     */\n    function abort() {\n        // Change status\n        if (status === 'pending') {\n            status = 'aborted';\n        }\n        // Reset timer\n        resetTimer();\n        // Abort all queued items\n        queue.forEach((item) => {\n            if (item.abort) {\n                item.abort();\n            }\n            if (item.status === 'pending') {\n                item.status = 'aborted';\n            }\n        });\n        queue = [];\n    }\n    /**\n     * Add / replace callback to call when execution is complete.\n     * This can be used to abort pending query implementations when query is complete or aborted.\n     */\n    function subscribe(callback, overwrite) {\n        if (overwrite) {\n            doneCallbacks = [];\n        }\n        if (typeof callback === 'function') {\n            doneCallbacks.push(callback);\n        }\n    }\n    /**\n     * Get query status\n     */\n    function getQueryStatus() {\n        return {\n            startTime,\n            payload,\n            status,\n            queriesSent,\n            queriesPending: queue.length,\n            subscribe,\n            abort,\n        };\n    }\n    /**\n     * Fail query\n     */\n    function failQuery() {\n        status = 'failed';\n        // Send notice to all callbacks\n        doneCallbacks.forEach((callback) => {\n            callback(void 0, lastError);\n        });\n    }\n    /**\n     * Clear queue\n     */\n    function clearQueue() {\n        queue = queue.filter((item) => {\n            if (item.status === 'pending') {\n                item.status = 'aborted';\n            }\n            if (item.abort) {\n                item.abort();\n            }\n            return false;\n        });\n    }\n    /**\n     * Got response from module\n     */\n    function moduleResponse(item, data, error) {\n        const isError = data === void 0;\n        // Remove item from queue\n        queue = queue.filter((queued) => queued !== item);\n        // Check status\n        switch (status) {\n            case 'pending':\n                // Pending\n                break;\n            case 'failed':\n                if (isError || !config.dataAfterTimeout) {\n                    // Query has already timed out or dataAfterTimeout is disabled\n                    return;\n                }\n                // Success after failure\n                break;\n            default:\n                // Aborted or completed\n                return;\n        }\n        // Error\n        if (isError) {\n            if (error !== void 0) {\n                lastError = error;\n            }\n            if (!queue.length) {\n                if (!resources.length) {\n                    // Nothing else queued, nothing can be queued\n                    failQuery();\n                }\n                else {\n                    // Queue is empty: run next item immediately\n                    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                    execNext();\n                }\n            }\n            return;\n        }\n        // Reset timers, abort pending queries\n        resetTimer();\n        clearQueue();\n        // Update index in Redundancy\n        if (success && !config.random) {\n            const index = config.resources.indexOf(item.resource);\n            if (index !== -1 && index !== config.index) {\n                success(index);\n            }\n        }\n        // Mark as completed and call callbacks\n        status = 'completed';\n        doneCallbacks.forEach((callback) => {\n            callback(data);\n        });\n    }\n    /**\n     * Execute next query\n     */\n    function execNext() {\n        // Check status\n        if (status !== 'pending') {\n            return;\n        }\n        // Reset timer\n        resetTimer();\n        // Get resource\n        const resource = resources.shift();\n        if (resource === void 0) {\n            // Nothing to execute: wait for final timeout before failing\n            if (queue.length) {\n                const timeout = typeof config.timeout === 'function'\n                    ? config.timeout(startTime)\n                    : config.timeout;\n                if (timeout) {\n                    // Last timeout before failing to allow late response\n                    timer = setTimeout(() => {\n                        resetTimer();\n                        if (status === 'pending') {\n                            // Clear queue\n                            clearQueue();\n                            failQuery();\n                        }\n                    }, timeout);\n                    return;\n                }\n            }\n            // Fail\n            failQuery();\n            return;\n        }\n        // Create new item\n        const item = {\n            getQueryStatus,\n            status: 'pending',\n            resource,\n            done: (data, error) => {\n                moduleResponse(item, data, error);\n            },\n        };\n        // Add to queue\n        queue.push(item);\n        // Bump next index\n        queriesSent++;\n        // Get timeout for next item\n        const timeout = typeof config.rotate === 'function'\n            ? config.rotate(queriesSent, startTime)\n            : config.rotate;\n        // Create timer\n        timer = setTimeout(execNext, timeout);\n        // Execute it\n        query(resource, payload, item);\n    }\n    // Execute first query on next tick\n    setTimeout(execNext);\n    // Return getQueryStatus()\n    return getQueryStatus;\n}\nexports.sendQuery = sendQuery;\n});\n\nvar redundancy = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initRedundancy = void 0;\n\n\n/**\n * Set configuration\n */\nfunction setConfig(config) {\n    if (typeof config !== 'object' ||\n        typeof config.resources !== 'object' ||\n        !(config.resources instanceof Array) ||\n        !config.resources.length) {\n        throw new Error('Invalid Reduncancy configuration');\n    }\n    const newConfig = Object.create(null);\n    let key;\n    for (key in config$1.defaultConfig) {\n        if (config[key] !== void 0) {\n            newConfig[key] = config[key];\n        }\n        else {\n            newConfig[key] = config$1.defaultConfig[key];\n        }\n    }\n    return newConfig;\n}\n/**\n * Redundancy instance\n */\nfunction initRedundancy(cfg) {\n    // Configuration\n    const config = setConfig(cfg);\n    // List of queries\n    let queries = [];\n    /**\n     * Remove aborted and completed queries\n     */\n    function cleanup() {\n        queries = queries.filter((item) => item().status === 'pending');\n    }\n    /**\n     * Send query\n     */\n    function query$1(payload, queryCallback, doneCallback) {\n        const query$1 = query.sendQuery(config, payload, queryCallback, (data, error) => {\n            // Remove query from list\n            cleanup();\n            // Call callback\n            if (doneCallback) {\n                doneCallback(data, error);\n            }\n        }, (newIndex) => {\n            // Update start index\n            config.index = newIndex;\n        });\n        queries.push(query$1);\n        return query$1;\n    }\n    /**\n     * Find instance\n     */\n    function find(callback) {\n        const result = queries.find((value) => {\n            return callback(value);\n        });\n        return result !== void 0 ? result : null;\n    }\n    // Create and return functions\n    const instance = {\n        query: query$1,\n        find,\n        setIndex: (index) => {\n            config.index = index;\n        },\n        getIndex: () => config.index,\n        cleanup,\n    };\n    return instance;\n}\nexports.initRedundancy = initRedundancy;\n});\n\nvar sort = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sortIcons = void 0;\n\n/**\n * Check if icons have been loaded\n */\nfunction sortIcons(icons) {\n    const result = {\n        loaded: [],\n        missing: [],\n        pending: [],\n    };\n    const storage = Object.create(null);\n    // Sort icons alphabetically to prevent duplicates and make sure they are sorted in API queries\n    icons.sort((a, b) => {\n        if (a.provider !== b.provider) {\n            return a.provider.localeCompare(b.provider);\n        }\n        if (a.prefix !== b.prefix) {\n            return a.prefix.localeCompare(b.prefix);\n        }\n        return a.name.localeCompare(b.name);\n    });\n    let lastIcon = {\n        provider: '',\n        prefix: '',\n        name: '',\n    };\n    icons.forEach((icon) => {\n        if (lastIcon.name === icon.name &&\n            lastIcon.prefix === icon.prefix &&\n            lastIcon.provider === icon.provider) {\n            return;\n        }\n        lastIcon = icon;\n        // Check icon\n        const provider = icon.provider;\n        const prefix = icon.prefix;\n        const name = icon.name;\n        if (storage[provider] === void 0) {\n            storage[provider] = Object.create(null);\n        }\n        const providerStorage = storage[provider];\n        if (providerStorage[prefix] === void 0) {\n            providerStorage[prefix] = storage_1.getStorage(provider, prefix);\n        }\n        const localStorage = providerStorage[prefix];\n        let list;\n        if (localStorage.icons[name] !== void 0) {\n            list = result.loaded;\n        }\n        else if (prefix === '' || localStorage.missing[name] !== void 0) {\n            // Mark icons without prefix as missing because they cannot be loaded from API\n            list = result.missing;\n        }\n        else {\n            list = result.pending;\n        }\n        const item = {\n            provider,\n            prefix,\n            name,\n        };\n        list.push(item);\n    });\n    return result;\n}\nexports.sortIcons = sortIcons;\n});\n\nvar callbacks = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeCallback = exports.updateCallbacks = exports.callbacks = void 0;\n\n// Records sorted by provider and prefix\n// This export is only for unit testing, should not be used\nexports.callbacks = Object.create(null);\nconst pendingUpdates = Object.create(null);\n/**\n * Remove callback\n */\nfunction removeCallback(sources, id) {\n    sources.forEach((source) => {\n        const provider = source.provider;\n        if (exports.callbacks[provider] === void 0) {\n            return;\n        }\n        const providerCallbacks = exports.callbacks[provider];\n        const prefix = source.prefix;\n        const items = providerCallbacks[prefix];\n        if (items) {\n            providerCallbacks[prefix] = items.filter((row) => row.id !== id);\n        }\n    });\n}\n/**\n * Update all callbacks for provider and prefix\n */\nfunction updateCallbacks(provider, prefix) {\n    if (pendingUpdates[provider] === void 0) {\n        pendingUpdates[provider] = Object.create(null);\n    }\n    const providerPendingUpdates = pendingUpdates[provider];\n    if (!providerPendingUpdates[prefix]) {\n        providerPendingUpdates[prefix] = true;\n        setTimeout(() => {\n            providerPendingUpdates[prefix] = false;\n            if (exports.callbacks[provider] === void 0 ||\n                exports.callbacks[provider][prefix] === void 0) {\n                return;\n            }\n            // Get all items\n            const items = exports.callbacks[provider][prefix].slice(0);\n            if (!items.length) {\n                return;\n            }\n            const storage = storage_1.getStorage(provider, prefix);\n            // Check each item for changes\n            let hasPending = false;\n            items.forEach((item) => {\n                const icons = item.icons;\n                const oldLength = icons.pending.length;\n                icons.pending = icons.pending.filter((icon) => {\n                    if (icon.prefix !== prefix) {\n                        // Checking only current prefix\n                        return true;\n                    }\n                    const name = icon.name;\n                    if (storage.icons[name] !== void 0) {\n                        // Loaded\n                        icons.loaded.push({\n                            provider,\n                            prefix,\n                            name,\n                        });\n                    }\n                    else if (storage.missing[name] !== void 0) {\n                        // Missing\n                        icons.missing.push({\n                            provider,\n                            prefix,\n                            name,\n                        });\n                    }\n                    else {\n                        // Pending\n                        hasPending = true;\n                        return true;\n                    }\n                    return false;\n                });\n                // Changes detected - call callback\n                if (icons.pending.length !== oldLength) {\n                    if (!hasPending) {\n                        // All icons have been loaded - remove callback from prefix\n                        removeCallback([\n                            {\n                                provider,\n                                prefix,\n                            },\n                        ], item.id);\n                    }\n                    item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n                }\n            });\n        });\n    }\n}\nexports.updateCallbacks = updateCallbacks;\n/**\n * Unique id counter for callbacks\n */\nlet idCounter = 0;\n/**\n * Add callback\n */\nfunction storeCallback(callback, icons, pendingSources) {\n    // Create unique id and abort function\n    const id = idCounter++;\n    const abort = removeCallback.bind(null, pendingSources, id);\n    if (!icons.pending.length) {\n        // Do not store item without pending icons and return function that does nothing\n        return abort;\n    }\n    // Create item and store it for all pending prefixes\n    const item = {\n        id,\n        icons,\n        callback,\n        abort: abort,\n    };\n    pendingSources.forEach((source) => {\n        const provider = source.provider;\n        const prefix = source.prefix;\n        if (exports.callbacks[provider] === void 0) {\n            exports.callbacks[provider] = Object.create(null);\n        }\n        const providerCallbacks = exports.callbacks[provider];\n        if (providerCallbacks[prefix] === void 0) {\n            providerCallbacks[prefix] = [];\n        }\n        providerCallbacks[prefix].push(item);\n    });\n    return abort;\n}\nexports.storeCallback = storeCallback;\n});\n\nvar modules = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAPIModule = exports.setAPIModule = void 0;\n/**\n * Local storate types and entries\n */\nconst storage = Object.create(null);\n/**\n * Set API module\n */\nfunction setAPIModule(provider, item) {\n    storage[provider] = item;\n}\nexports.setAPIModule = setAPIModule;\n/**\n * Get API module\n */\nfunction getAPIModule(provider) {\n    return storage[provider] === void 0 ? storage[''] : storage[provider];\n}\nexports.getAPIModule = getAPIModule;\n});\n\nvar config = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAPIConfig = exports.setAPIConfig = void 0;\n/**\n * Create full API configuration from partial data\n */\nfunction createConfig(source) {\n    let resources;\n    if (typeof source.resources === 'string') {\n        resources = [source.resources];\n    }\n    else {\n        resources = source.resources;\n        if (!(resources instanceof Array) || !resources.length) {\n            return null;\n        }\n    }\n    const result = {\n        // API hosts\n        resources: resources,\n        // Root path\n        path: source.path === void 0 ? '/' : source.path,\n        // URL length limit\n        maxURL: source.maxURL ? source.maxURL : 500,\n        // Timeout before next host is used.\n        rotate: source.rotate ? source.rotate : 750,\n        // Timeout before failing query.\n        timeout: source.timeout ? source.timeout : 5000,\n        // Randomise default API end point.\n        random: source.random === true,\n        // Start index\n        index: source.index ? source.index : 0,\n        // Receive data after time out (used if time out kicks in first, then API module sends data anyway).\n        dataAfterTimeout: source.dataAfterTimeout !== false,\n    };\n    return result;\n}\n/**\n * Local storage\n */\nconst configStorage = Object.create(null);\n/**\n * Redundancy for API servers.\n *\n * API should have very high uptime because of implemented redundancy at server level, but\n * sometimes bad things happen. On internet 100% uptime is not possible.\n *\n * There could be routing problems. Server might go down for whatever reason, but it takes\n * few minutes to detect that downtime, so during those few minutes API might not be accessible.\n *\n * This script has some redundancy to mitigate possible network issues.\n *\n * If one host cannot be reached in 'rotate' (750 by default) ms, script will try to retrieve\n * data from different host. Hosts have different configurations, pointing to different\n * API servers hosted at different providers.\n */\nconst fallBackAPISources = [\n    'https://api.simplesvg.com',\n    'https://api.unisvg.com',\n];\n// Shuffle fallback API\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n    if (fallBackAPISources.length === 1) {\n        fallBackAPI.push(fallBackAPISources.shift());\n    }\n    else {\n        // Get first or last item\n        if (Math.random() > 0.5) {\n            fallBackAPI.push(fallBackAPISources.shift());\n        }\n        else {\n            fallBackAPI.push(fallBackAPISources.pop());\n        }\n    }\n}\n// Add default API\nconfigStorage[''] = createConfig({\n    resources: ['https://api.iconify.design'].concat(fallBackAPI),\n});\n/**\n * Add custom config for provider\n */\nfunction setAPIConfig(provider, customConfig) {\n    const config = createConfig(customConfig);\n    if (config === null) {\n        return false;\n    }\n    configStorage[provider] = config;\n    return true;\n}\nexports.setAPIConfig = setAPIConfig;\n/**\n * Get API configuration\n */\nconst getAPIConfig = (provider) => configStorage[provider];\nexports.getAPIConfig = getAPIConfig;\n});\n\nvar list = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProviders = exports.listToIcons = void 0;\n\n/**\n * Convert icons list from string/icon mix to icons and validate them\n */\nfunction listToIcons(list, validate = true, simpleNames = false) {\n    const result = [];\n    list.forEach((item) => {\n        const icon = typeof item === 'string'\n            ? name.stringToIcon(item, false, simpleNames)\n            : item;\n        if (!validate || name.validateIcon(icon, simpleNames)) {\n            result.push({\n                provider: icon.provider,\n                prefix: icon.prefix,\n                name: icon.name,\n            });\n        }\n    });\n    return result;\n}\nexports.listToIcons = listToIcons;\n/**\n * Get all providers\n */\nfunction getProviders(list) {\n    const providers = Object.create(null);\n    list.forEach((icon) => {\n        providers[icon.provider] = true;\n    });\n    return Object.keys(providers);\n}\nexports.getProviders = getProviders;\n});\n\nvar api = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.API = exports.getRedundancyCache = void 0;\n\n\n\n\n\n\n\n\n\n// Empty abort callback for loadIcons()\nfunction emptyCallback() {\n    // Do nothing\n}\nconst pendingIcons = Object.create(null);\n/**\n * List of icons that are waiting to be loaded.\n *\n * List is passed to API module, then cleared.\n *\n * This list should not be used for any checks, use pendingIcons to check\n * if icons is being loaded.\n *\n * [provider][prefix] = array of icon names\n */\nconst iconsToLoad = Object.create(null);\n// Flags to merge multiple synchronous icon requests in one asynchronous request\nconst loaderFlags = Object.create(null);\nconst queueFlags = Object.create(null);\nconst redundancyCache = Object.create(null);\n/**\n * Get Redundancy instance for provider\n */\nfunction getRedundancyCache(provider) {\n    if (redundancyCache[provider] === void 0) {\n        const config$1 = config.getAPIConfig(provider);\n        if (!config$1) {\n            // No way to load icons because configuration is not set!\n            return;\n        }\n        const redundancy$1 = redundancy.initRedundancy(config$1);\n        const cachedReundancy = {\n            config: config$1,\n            redundancy: redundancy$1,\n        };\n        redundancyCache[provider] = cachedReundancy;\n    }\n    return redundancyCache[provider];\n}\nexports.getRedundancyCache = getRedundancyCache;\n/**\n * Function called when new icons have been loaded\n */\nfunction loadedNewIcons(provider, prefix) {\n    // Run only once per tick, possibly joining multiple API responses in one call\n    if (loaderFlags[provider] === void 0) {\n        loaderFlags[provider] = Object.create(null);\n    }\n    const providerLoaderFlags = loaderFlags[provider];\n    if (!providerLoaderFlags[prefix]) {\n        providerLoaderFlags[prefix] = true;\n        setTimeout(() => {\n            providerLoaderFlags[prefix] = false;\n            callbacks.updateCallbacks(provider, prefix);\n        });\n    }\n}\n// Storage for errors for loadNewIcons(). Used to avoid spamming log with identical errors.\nconst errorsCache = Object.create(null);\n/**\n * Load icons\n */\nfunction loadNewIcons(provider, prefix, icons) {\n    function err() {\n        const key = (provider === '' ? '' : '@' + provider + ':') + prefix;\n        const time = Math.floor(Date.now() / 60000); // log once in a minute\n        if (errorsCache[key] < time) {\n            errorsCache[key] = time;\n            console.error('Unable to retrieve icons for \"' +\n                key +\n                '\" because API is not configured properly.');\n        }\n    }\n    // Create nested objects if needed\n    if (iconsToLoad[provider] === void 0) {\n        iconsToLoad[provider] = Object.create(null);\n    }\n    const providerIconsToLoad = iconsToLoad[provider];\n    if (queueFlags[provider] === void 0) {\n        queueFlags[provider] = Object.create(null);\n    }\n    const providerQueueFlags = queueFlags[provider];\n    if (pendingIcons[provider] === void 0) {\n        pendingIcons[provider] = Object.create(null);\n    }\n    const providerPendingIcons = pendingIcons[provider];\n    // Add icons to queue\n    if (providerIconsToLoad[prefix] === void 0) {\n        providerIconsToLoad[prefix] = icons;\n    }\n    else {\n        providerIconsToLoad[prefix] = providerIconsToLoad[prefix]\n            .concat(icons)\n            .sort();\n    }\n    // Redundancy item\n    let cachedReundancy;\n    // Trigger update on next tick, mering multiple synchronous requests into one asynchronous request\n    if (!providerQueueFlags[prefix]) {\n        providerQueueFlags[prefix] = true;\n        setTimeout(() => {\n            providerQueueFlags[prefix] = false;\n            // Get icons and delete queue\n            const icons = providerIconsToLoad[prefix];\n            delete providerIconsToLoad[prefix];\n            // Get API module\n            const api = modules.getAPIModule(provider);\n            if (!api) {\n                // No way to load icons!\n                err();\n                return;\n            }\n            // Get API config and Redundancy instance\n            if (cachedReundancy === void 0) {\n                const redundancy = getRedundancyCache(provider);\n                if (redundancy === void 0) {\n                    // No way to load icons because configuration is not set!\n                    err();\n                    return;\n                }\n                cachedReundancy = redundancy;\n            }\n            // Prepare parameters and run queries\n            const params = api.prepare(provider, prefix, icons);\n            params.forEach((item) => {\n                cachedReundancy.redundancy.query(item, api.send, (data, error) => {\n                    const storage = storage_1.getStorage(provider, prefix);\n                    // Check for error\n                    if (typeof data !== 'object') {\n                        if (error !== 404) {\n                            // Do not handle error unless it is 404\n                            return;\n                        }\n                        // Not found: mark as missing\n                        const t = Date.now();\n                        item.icons.forEach((name) => {\n                            storage.missing[name] = t;\n                        });\n                    }\n                    else {\n                        // Add icons to storage\n                        try {\n                            const added = storage_1.addIconSet(storage, data, 'all');\n                            if (typeof added === 'boolean') {\n                                return;\n                            }\n                            // Remove added icons from pending list\n                            const pending = providerPendingIcons[prefix];\n                            added.forEach((name) => {\n                                delete pending[name];\n                            });\n                            // Cache API response\n                            if (modules$1.coreModules.cache) {\n                                modules$1.coreModules.cache(provider, data);\n                            }\n                        }\n                        catch (err) {\n                            console.error(err);\n                        }\n                    }\n                    // Trigger update on next tick\n                    loadedNewIcons(provider, prefix);\n                });\n            });\n        });\n    }\n}\n/**\n * Check if icon is being loaded\n */\nconst isPending = (icon) => {\n    return (pendingIcons[icon.provider] !== void 0 &&\n        pendingIcons[icon.provider][icon.prefix] !== void 0 &&\n        pendingIcons[icon.provider][icon.prefix][icon.name] !== void 0);\n};\n/**\n * Load icons\n */\nconst loadIcons = (icons, callback) => {\n    // Clean up and copy icons list\n    const cleanedIcons = list.listToIcons(icons, true, functions$3.allowSimpleNames());\n    // Sort icons by missing/loaded/pending\n    // Pending means icon is either being requsted or is about to be requested\n    const sortedIcons = sort.sortIcons(cleanedIcons);\n    if (!sortedIcons.pending.length) {\n        // Nothing to load\n        let callCallback = true;\n        if (callback) {\n            setTimeout(() => {\n                if (callCallback) {\n                    callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n                }\n            });\n        }\n        return () => {\n            callCallback = false;\n        };\n    }\n    // Get all sources for pending icons\n    const newIcons = Object.create(null);\n    const sources = [];\n    let lastProvider, lastPrefix;\n    sortedIcons.pending.forEach((icon) => {\n        const provider = icon.provider;\n        const prefix = icon.prefix;\n        if (prefix === lastPrefix && provider === lastProvider) {\n            return;\n        }\n        lastProvider = provider;\n        lastPrefix = prefix;\n        sources.push({\n            provider,\n            prefix,\n        });\n        if (pendingIcons[provider] === void 0) {\n            pendingIcons[provider] = Object.create(null);\n        }\n        const providerPendingIcons = pendingIcons[provider];\n        if (providerPendingIcons[prefix] === void 0) {\n            providerPendingIcons[prefix] = Object.create(null);\n        }\n        if (newIcons[provider] === void 0) {\n            newIcons[provider] = Object.create(null);\n        }\n        const providerNewIcons = newIcons[provider];\n        if (providerNewIcons[prefix] === void 0) {\n            providerNewIcons[prefix] = [];\n        }\n    });\n    // List of new icons\n    const time = Date.now();\n    // Filter pending icons list: find icons that are not being loaded yet\n    // If icon was called before, it must exist in pendingIcons or storage, but because this\n    // function is called right after sortIcons() that checks storage, icon is definitely not in storage.\n    sortedIcons.pending.forEach((icon) => {\n        const provider = icon.provider;\n        const prefix = icon.prefix;\n        const name = icon.name;\n        const pendingQueue = pendingIcons[provider][prefix];\n        if (pendingQueue[name] === void 0) {\n            // New icon - add to pending queue to mark it as being loaded\n            pendingQueue[name] = time;\n            // Add it to new icons list to pass it to API module for loading\n            newIcons[provider][prefix].push(name);\n        }\n    });\n    // Load icons on next tick to make sure result is not returned before callback is stored and\n    // to consolidate multiple synchronous loadIcons() calls into one asynchronous API call\n    sources.forEach((source) => {\n        const provider = source.provider;\n        const prefix = source.prefix;\n        if (newIcons[provider][prefix].length) {\n            loadNewIcons(provider, prefix, newIcons[provider][prefix]);\n        }\n    });\n    // Store callback and return abort function\n    return callback\n        ? callbacks.storeCallback(callback, sortedIcons, sources)\n        : emptyCallback;\n};\n/**\n * Export module\n */\nexports.API = {\n    isPending,\n    loadIcons,\n};\n});\n\nvar functions$1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.APIInternalFunctions = exports.APIFunctions = void 0;\n\n\n\nexports.APIFunctions = {\n    loadIcons: api.API.loadIcons,\n    addAPIProvider: config.setAPIConfig,\n};\nexports.APIInternalFunctions = {\n    getAPI: api.getRedundancyCache,\n    getAPIConfig: config.getAPIConfig,\n    setAPIModule: modules.setAPIModule,\n};\n});\n\nvar jsonp = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAPIModule = void 0;\nlet rootVar = null;\n/**\n * Endpoint\n */\nlet endPoint = '{prefix}.js?icons={icons}&callback={callback}';\n/**\n * Cache: provider:prefix = value\n */\nconst maxLengthCache = Object.create(null);\nconst pathCache = Object.create(null);\n/**\n * Get hash for query\n *\n * Hash is used in JSONP callback name, so same queries end up with same JSONP callback,\n * allowing response to be cached in browser.\n */\nfunction hash(str) {\n    let total = 0, i;\n    for (i = str.length - 1; i >= 0; i--) {\n        total += str.charCodeAt(i);\n    }\n    return total % 999;\n}\n/**\n * Get root object\n */\nfunction getGlobal() {\n    // Create root\n    if (rootVar === null) {\n        // window\n        const globalRoot = self;\n        // Test for window.Iconify. If missing, create 'IconifyJSONP'\n        let prefix = 'Iconify';\n        let extraPrefix = '.cb';\n        if (globalRoot[prefix] === void 0) {\n            // Use 'IconifyJSONP' global\n            prefix = 'IconifyJSONP';\n            extraPrefix = '';\n            if (globalRoot[prefix] === void 0) {\n                globalRoot[prefix] = Object.create(null);\n            }\n            rootVar = globalRoot[prefix];\n        }\n        else {\n            // Use 'Iconify.cb'\n            const iconifyRoot = globalRoot[prefix];\n            if (iconifyRoot.cb === void 0) {\n                iconifyRoot.cb = Object.create(null);\n            }\n            rootVar = iconifyRoot.cb;\n        }\n        // Change end point\n        endPoint = endPoint.replace('{callback}', prefix + extraPrefix + '.{cb}');\n    }\n    return rootVar;\n}\n/**\n * Return API module\n */\nconst getAPIModule = (getAPIConfig) => {\n    /**\n     * Calculate maximum icons list length for prefix\n     */\n    function calculateMaxLength(provider, prefix) {\n        // Get config and store path\n        const config = getAPIConfig(provider);\n        if (!config) {\n            return 0;\n        }\n        // Calculate\n        let result;\n        if (!config.maxURL) {\n            result = 0;\n        }\n        else {\n            let maxHostLength = 0;\n            config.resources.forEach((item) => {\n                const host = item;\n                maxHostLength = Math.max(maxHostLength, host.length);\n            });\n            // Make sure global is set\n            getGlobal();\n            // Extra width: prefix (3) + counter (4) - '{cb}' (4)\n            const extraLength = 3;\n            // Get available length\n            result =\n                config.maxURL -\n                    maxHostLength -\n                    config.path.length -\n                    endPoint\n                        .replace('{provider}', provider)\n                        .replace('{prefix}', prefix)\n                        .replace('{icons}', '').length -\n                    extraLength;\n        }\n        // Cache stuff and return result\n        const cacheKey = provider + ':' + prefix;\n        pathCache[cacheKey] = config.path;\n        maxLengthCache[cacheKey] = result;\n        return result;\n    }\n    /**\n     * Prepare params\n     */\n    const prepare = (provider, prefix, icons) => {\n        const results = [];\n        // Get maximum icons list length\n        const cacheKey = provider + ':' + prefix;\n        let maxLength = maxLengthCache[cacheKey];\n        if (maxLength === void 0) {\n            maxLength = calculateMaxLength(provider, prefix);\n        }\n        // Split icons\n        let item = {\n            provider,\n            prefix,\n            icons: [],\n        };\n        let length = 0;\n        icons.forEach((name, index) => {\n            length += name.length + 1;\n            if (length >= maxLength && index > 0) {\n                // Next set\n                results.push(item);\n                item = {\n                    provider,\n                    prefix,\n                    icons: [],\n                };\n                length = name.length;\n            }\n            item.icons.push(name);\n        });\n        results.push(item);\n        return results;\n    };\n    /**\n     * Load icons\n     */\n    const send = (host, params, status) => {\n        const provider = params.provider;\n        const prefix = params.prefix;\n        const icons = params.icons;\n        const iconsList = icons.join(',');\n        const cacheKey = provider + ':' + prefix;\n        // Create callback prefix\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const cbPrefix = prefix.split('-').shift().slice(0, 3);\n        const global = getGlobal();\n        // Callback hash\n        let cbCounter = hash(provider + ':' + host + ':' + prefix + ':' + iconsList);\n        while (global[cbPrefix + cbCounter] !== void 0) {\n            cbCounter++;\n        }\n        const callbackName = cbPrefix + cbCounter;\n        const path = pathCache[cacheKey] +\n            endPoint\n                .replace('{provider}', provider)\n                .replace('{prefix}', prefix)\n                .replace('{icons}', iconsList)\n                .replace('{cb}', callbackName);\n        global[callbackName] = (data) => {\n            // Remove callback and complete query\n            delete global[callbackName];\n            status.done(data);\n        };\n        // Create URI\n        const uri = host + path;\n        // console.log('API query:', uri);\n        // Create script and append it to head\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.src = uri;\n        document.head.appendChild(script);\n    };\n    // Return functions\n    return {\n        prepare,\n        send,\n    };\n};\nexports.getAPIModule = getAPIModule;\n});\n\nvar fetch_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAPIModule = exports.setFetch = void 0;\n/**\n * Endpoint\n */\nconst endPoint = '{prefix}.json?icons={icons}';\n/**\n * Cache\n */\nconst maxLengthCache = Object.create(null);\nconst pathCache = Object.create(null);\n/**\n * Fetch function\n *\n * Use this to set 'cross-fetch' in node.js environment if you are retrieving icons on server side.\n * Not needed when using stuff like Next.js or SvelteKit because components use API only on client side.\n */\nlet fetchModule = null;\ntry {\n    fetchModule = fetch;\n}\ncatch (err) {\n    //\n}\nfunction setFetch(fetch) {\n    fetchModule = fetch;\n}\nexports.setFetch = setFetch;\n/**\n * Return API module\n */\nconst getAPIModule = (getAPIConfig) => {\n    /**\n     * Calculate maximum icons list length for prefix\n     */\n    function calculateMaxLength(provider, prefix) {\n        // Get config and store path\n        const config = getAPIConfig(provider);\n        if (!config) {\n            return 0;\n        }\n        // Calculate\n        let result;\n        if (!config.maxURL) {\n            result = 0;\n        }\n        else {\n            let maxHostLength = 0;\n            config.resources.forEach((item) => {\n                const host = item;\n                maxHostLength = Math.max(maxHostLength, host.length);\n            });\n            // Get available length\n            result =\n                config.maxURL -\n                    maxHostLength -\n                    config.path.length -\n                    endPoint\n                        .replace('{provider}', provider)\n                        .replace('{prefix}', prefix)\n                        .replace('{icons}', '').length;\n        }\n        // Cache stuff and return result\n        const cacheKey = provider + ':' + prefix;\n        pathCache[cacheKey] = config.path;\n        maxLengthCache[cacheKey] = result;\n        return result;\n    }\n    /**\n     * Prepare params\n     */\n    const prepare = (provider, prefix, icons) => {\n        const results = [];\n        // Get maximum icons list length\n        let maxLength = maxLengthCache[prefix];\n        if (maxLength === void 0) {\n            maxLength = calculateMaxLength(provider, prefix);\n        }\n        // Split icons\n        let item = {\n            provider,\n            prefix,\n            icons: [],\n        };\n        let length = 0;\n        icons.forEach((name, index) => {\n            length += name.length + 1;\n            if (length >= maxLength && index > 0) {\n                // Next set\n                results.push(item);\n                item = {\n                    provider,\n                    prefix,\n                    icons: [],\n                };\n                length = name.length;\n            }\n            item.icons.push(name);\n        });\n        results.push(item);\n        return results;\n    };\n    /**\n     * Load icons\n     */\n    const send = (host, params, status) => {\n        const provider = params.provider;\n        const prefix = params.prefix;\n        const icons = params.icons;\n        const iconsList = icons.join(',');\n        const cacheKey = provider + ':' + prefix;\n        const path = pathCache[cacheKey] +\n            endPoint\n                .replace('{provider}', provider)\n                .replace('{prefix}', prefix)\n                .replace('{icons}', iconsList);\n        if (!fetchModule) {\n            // Fail: return 424 Failed Dependency (its not meant to be used like that, but it is the best match)\n            status.done(void 0, 424);\n            return;\n        }\n        // console.log('API query:', host + path);\n        fetchModule(host + path)\n            .then((response) => {\n            if (response.status !== 200) {\n                status.done(void 0, response.status);\n                return;\n            }\n            return response.json();\n        })\n            .then((data) => {\n            if (typeof data !== 'object' || data === null) {\n                return;\n            }\n            // Store cache and complete\n            status.done(data);\n        })\n            .catch((err) => {\n            // Error\n            status.done(void 0, err.errno);\n        });\n    };\n    // Return functions\n    return {\n        prepare,\n        send,\n    };\n};\nexports.getAPIModule = getAPIModule;\n});\n\nvar browserStorage = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeCache = exports.loadCache = exports.mock = exports.emptyList = exports.count = exports.config = void 0;\n\n// After changing configuration change it in tests/*/fake_cache.ts\n// Cache version. Bump when structure changes\nconst cacheVersion = 'iconify2';\n// Cache keys\nconst cachePrefix = 'iconify';\nconst countKey = cachePrefix + '-count';\nconst versionKey = cachePrefix + '-version';\n/**\n * Cache expiration\n */\nconst hour = 3600000;\nconst cacheExpiration = 168; // In hours\n/**\n * Storage configuration\n */\nexports.config = {\n    local: true,\n    session: true,\n};\n/**\n * Flag to check if storage has been loaded\n */\nlet loaded = false;\n/**\n * Items counter\n */\nexports.count = {\n    local: 0,\n    session: 0,\n};\n/**\n * List of empty items\n */\nexports.emptyList = {\n    local: [],\n    session: [],\n};\nlet _window = typeof window === 'undefined' ? {} : window;\nfunction mock(fakeWindow) {\n    loaded = false;\n    _window = fakeWindow;\n}\nexports.mock = mock;\n/**\n * Get global\n *\n * @param key\n */\nfunction getGlobal(key) {\n    const attr = key + 'Storage';\n    try {\n        if (_window &&\n            _window[attr] &&\n            typeof _window[attr].length === 'number') {\n            return _window[attr];\n        }\n    }\n    catch (err) {\n        //\n    }\n    // Failed - mark as disabled\n    exports.config[key] = false;\n    return null;\n}\n/**\n * Change current count for storage\n */\nfunction setCount(storage, key, value) {\n    try {\n        storage.setItem(countKey, value + '');\n        exports.count[key] = value;\n        return true;\n    }\n    catch (err) {\n        return false;\n    }\n}\n/**\n * Get current count from storage\n *\n * @param storage\n */\nfunction getCount(storage) {\n    const count = storage.getItem(countKey);\n    if (count) {\n        const total = parseInt(count);\n        return total ? total : 0;\n    }\n    return 0;\n}\n/**\n * Initialize storage\n *\n * @param storage\n * @param key\n */\nfunction initCache(storage, key) {\n    try {\n        storage.setItem(versionKey, cacheVersion);\n    }\n    catch (err) {\n        //\n    }\n    setCount(storage, key, 0);\n}\n/**\n * Destroy old cache\n *\n * @param storage\n */\nfunction destroyCache(storage) {\n    try {\n        const total = getCount(storage);\n        for (let i = 0; i < total; i++) {\n            storage.removeItem(cachePrefix + i);\n        }\n    }\n    catch (err) {\n        //\n    }\n}\n/**\n * Load icons from cache\n */\nconst loadCache = () => {\n    if (loaded) {\n        return;\n    }\n    loaded = true;\n    // Minimum time\n    const minTime = Math.floor(Date.now() / hour) - cacheExpiration;\n    // Load data from storage\n    function load(key) {\n        const func = getGlobal(key);\n        if (!func) {\n            return;\n        }\n        // Get one item from storage\n        const getItem = (index) => {\n            const name = cachePrefix + index;\n            const item = func.getItem(name);\n            if (typeof item !== 'string') {\n                // Does not exist\n                return false;\n            }\n            // Get item, validate it\n            let valid = true;\n            try {\n                // Parse, check time stamp\n                const data = JSON.parse(item);\n                if (typeof data !== 'object' ||\n                    typeof data.cached !== 'number' ||\n                    data.cached < minTime ||\n                    typeof data.provider !== 'string' ||\n                    typeof data.data !== 'object' ||\n                    typeof data.data.prefix !== 'string') {\n                    valid = false;\n                }\n                else {\n                    // Add icon set\n                    const provider = data.provider;\n                    const prefix = data.data.prefix;\n                    const storage = storage_1.getStorage(provider, prefix);\n                    valid = storage_1.addIconSet(storage, data.data);\n                }\n            }\n            catch (err) {\n                valid = false;\n            }\n            if (!valid) {\n                func.removeItem(name);\n            }\n            return valid;\n        };\n        try {\n            // Get version\n            const version = func.getItem(versionKey);\n            if (version !== cacheVersion) {\n                if (version) {\n                    // Version is set, but invalid - remove old entries\n                    destroyCache(func);\n                }\n                // Empty data\n                initCache(func, key);\n                return;\n            }\n            // Get number of stored items\n            let total = getCount(func);\n            for (let i = total - 1; i >= 0; i--) {\n                if (!getItem(i)) {\n                    // Remove item\n                    if (i === total - 1) {\n                        // Last item - reduce country\n                        total--;\n                    }\n                    else {\n                        // Mark as empty\n                        exports.emptyList[key].push(i);\n                    }\n                }\n            }\n            // Update total\n            setCount(func, key, total);\n        }\n        catch (err) {\n            //\n        }\n    }\n    for (const key in exports.config) {\n        load(key);\n    }\n};\nexports.loadCache = loadCache;\n/**\n * Function to cache icons\n */\nconst storeCache = (provider, data) => {\n    if (!loaded) {\n        exports.loadCache();\n    }\n    function store(key) {\n        if (!exports.config[key]) {\n            return false;\n        }\n        const func = getGlobal(key);\n        if (!func) {\n            return false;\n        }\n        // Get item index\n        let index = exports.emptyList[key].shift();\n        if (index === void 0) {\n            // Create new index\n            index = exports.count[key];\n            if (!setCount(func, key, index + 1)) {\n                return false;\n            }\n        }\n        // Create and save item\n        try {\n            const item = {\n                cached: Math.floor(Date.now() / hour),\n                provider,\n                data,\n            };\n            func.setItem(cachePrefix + index, JSON.stringify(item));\n        }\n        catch (err) {\n            return false;\n        }\n        return true;\n    }\n    // Attempt to store at localStorage first, then at sessionStorage\n    if (!store('local')) {\n        store('session');\n    }\n};\nexports.storeCache = storeCache;\n});\n\nvar functions = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toggleBrowserCache = void 0;\n\n/**\n * Toggle cache\n */\nfunction toggleBrowserCache(storage, value) {\n    switch (storage) {\n        case 'local':\n        case 'session':\n            browserStorage.config[storage] = value;\n            break;\n        case 'all':\n            for (const key in browserStorage.config) {\n                browserStorage.config[key] = value;\n            }\n            break;\n    }\n}\nexports.toggleBrowserCache = toggleBrowserCache;\n});\n\nvar shorthand = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.alignmentFromString = exports.flipFromString = void 0;\nconst separator = /[\\s,]+/;\n/**\n * Apply \"flip\" string to icon customisations\n */\nfunction flipFromString(custom, flip) {\n    flip.split(separator).forEach((str) => {\n        const value = str.trim();\n        switch (value) {\n            case 'horizontal':\n                custom.hFlip = true;\n                break;\n            case 'vertical':\n                custom.vFlip = true;\n                break;\n        }\n    });\n}\nexports.flipFromString = flipFromString;\n/**\n * Apply \"align\" string to icon customisations\n */\nfunction alignmentFromString(custom, align) {\n    align.split(separator).forEach((str) => {\n        const value = str.trim();\n        switch (value) {\n            case 'left':\n            case 'center':\n            case 'right':\n                custom.hAlign = value;\n                break;\n            case 'top':\n            case 'middle':\n            case 'bottom':\n                custom.vAlign = value;\n                break;\n            case 'slice':\n            case 'crop':\n                custom.slice = true;\n                break;\n            case 'meet':\n                custom.slice = false;\n        }\n    });\n}\nexports.alignmentFromString = alignmentFromString;\n});\n\nvar rotate = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rotateFromString = void 0;\n/**\n * Get rotation value\n */\nfunction rotateFromString(value) {\n    const units = value.replace(/^-?[0-9.]*/, '');\n    function cleanup(value) {\n        while (value < 0) {\n            value += 4;\n        }\n        return value % 4;\n    }\n    if (units === '') {\n        const num = parseInt(value);\n        return isNaN(num) ? 0 : cleanup(num);\n    }\n    else if (units !== value) {\n        let split = 0;\n        switch (units) {\n            case '%':\n                // 25% -> 1, 50% -> 2, ...\n                split = 25;\n                break;\n            case 'deg':\n                // 90deg -> 1, 180deg -> 2, ...\n                split = 90;\n        }\n        if (split) {\n            let num = parseFloat(value.slice(0, value.length - units.length));\n            if (isNaN(num)) {\n                return 0;\n            }\n            num = num / split;\n            return num % 1 === 0 ? cleanup(num) : 0;\n        }\n    }\n    return 0;\n}\nexports.rotateFromString = rotateFromString;\n});\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n    'style': {}, // Include style if it isn't set to add verticalAlign later\n};\n/**\n * Default values for customisations for inline icon\n */\nconst inlineDefaults = { ...customisations.defaults, inline: true };\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops, \n// True if icon should have vertical-align added\ninline, \n// Optional reference for SVG, extracted by React.forwardRef()\nref) => {\n    // Get default properties\n    const defaultProps = inline ? inlineDefaults : customisations.defaults;\n    // Get all customisations\n    const customisations$1 = customisations.mergeCustomisations(defaultProps, props);\n    // Create style\n    const style = typeof props.style === 'object' && props.style !== null\n        ? props.style\n        : {};\n    // Create SVG component properties\n    const componentProps = { ...svgDefaults, ref, style };\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'children':\n            case 'onLoad':\n            case '_ref':\n            case '_inline':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations$1[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    shorthand.flipFromString(customisations$1, value);\n                }\n                break;\n            // Alignment as string\n            case 'align':\n                if (typeof value === 'string') {\n                    shorthand.alignmentFromString(customisations$1, value);\n                }\n                break;\n            // Color: copy to style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations$1[key] = rotate.rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations$1[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            // Copy missing property if it does not exist in customisations\n            default:\n                if (defaultProps[key] === void 0) {\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = build.iconToSVG(icon, customisations$1);\n    // Counter for ids based on \"id\" property to render icons consistently on server and client\n    let localCounter = 0;\n    const id$1 = props.id;\n    // Add icon stuff\n    componentProps.dangerouslySetInnerHTML = {\n        __html: id.replaceIDs(item.body, id$1 ? () => id$1 + '-' + localCounter++ : 'iconify-react-'),\n    };\n    for (let key in item.attributes) {\n        componentProps[key] = item.attributes[key];\n    }\n    if (item.inline && style.verticalAlign === void 0) {\n        style.verticalAlign = '-0.125em';\n    }\n    return React.createElement('svg', componentProps);\n};\n\n/**\n * Enable and disable browser cache\n */\nconst enableCache = (storage) => functions.toggleBrowserCache(storage, true);\nconst disableCache = (storage) => functions.toggleBrowserCache(storage, false);\n/* Storage functions */\n/**\n * Check if icon exists\n */\nconst iconExists = functions$3.storageFunctions.iconExists;\n/**\n * Get icon data\n */\nconst getIcon = functions$3.storageFunctions.getIcon;\n/**\n * List available icons\n */\nconst listIcons = functions$3.storageFunctions.listIcons;\n/**\n * Add one icon\n */\nconst addIcon = functions$3.storageFunctions.addIcon;\n/**\n * Add icon set\n */\nconst addCollection = functions$3.storageFunctions.addCollection;\n/* Builder functions */\n/**\n * Calculate icon size\n */\nconst calculateSize = functions$2.builderFunctions.calculateSize;\n/**\n * Replace unique ids in content\n */\nconst replaceIDs = functions$2.builderFunctions.replaceIDs;\n/**\n * Build SVG\n */\nconst buildIcon = functions$2.builderFunctions.buildIcon;\n/* API functions */\n/**\n * Load icons\n */\nconst loadIcons = functions$1.APIFunctions.loadIcons;\n/**\n * Add API provider\n */\nconst addAPIProvider = functions$1.APIFunctions.addAPIProvider;\n/**\n * Export internal functions that can be used by third party implementations\n */\nconst _api = functions$1.APIInternalFunctions;\n/**\n * Initialise stuff\n */\n// Enable short names\nfunctions$3.allowSimpleNames(true);\n// Set API\nmodules$1.coreModules.api = api.API;\n// Use Fetch API by default\nlet getAPIModule = fetch_1.getAPIModule;\ntry {\n    if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n        // If window and document exist, attempt to load whatever module is available, otherwise use Fetch API\n        getAPIModule =\n            typeof fetch === 'function' && typeof Promise === 'function'\n                ? fetch_1.getAPIModule\n                : jsonp.getAPIModule;\n    }\n}\ncatch (err) {\n    //\n}\nmodules.setAPIModule('', getAPIModule(config.getAPIConfig));\n/**\n * Function to enable node-fetch for getting icons on server side\n */\n_api.setFetch = (nodeFetch) => {\n    fetch_1.setFetch(nodeFetch);\n    if (getAPIModule !== fetch_1.getAPIModule) {\n        getAPIModule = fetch_1.getAPIModule;\n        modules.setAPIModule('', getAPIModule(config.getAPIConfig));\n    }\n};\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    modules$1.coreModules.cache = browserStorage.storeCache;\n    browserStorage.loadCache();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!config.setAPIConfig(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\nclass IconComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // Render placeholder before component is mounted\n            icon: null,\n        };\n    }\n    /**\n     * Abort loading icon\n     */\n    _abortLoading() {\n        if (this._loading) {\n            this._loading.abort();\n            this._loading = null;\n        }\n    }\n    /**\n     * Update state\n     */\n    _setData(icon) {\n        if (this.state.icon !== icon) {\n            this.setState({\n                icon,\n            });\n        }\n    }\n    /**\n     * Check if icon should be loaded\n     */\n    _checkIcon(changed) {\n        const state = this.state;\n        const icon$1 = this.props.icon;\n        // Icon is an object\n        if (typeof icon$1 === 'object' &&\n            icon$1 !== null &&\n            typeof icon$1.body === 'string') {\n            // Stop loading\n            this._icon = '';\n            this._abortLoading();\n            if (changed || state.icon === null) {\n                // Set data if it was changed\n                this._setData({\n                    data: icon.fullIcon(icon$1),\n                });\n            }\n            return;\n        }\n        // Invalid icon?\n        let iconName;\n        if (typeof icon$1 !== 'string' ||\n            (iconName = name.stringToIcon(icon$1, false, true)) === null) {\n            this._abortLoading();\n            this._setData(null);\n            return;\n        }\n        // Load icon\n        const data = functions$3.getIconData(iconName);\n        if (data === null) {\n            // Icon needs to be loaded\n            if (!this._loading || this._loading.name !== icon$1) {\n                // New icon to load\n                this._abortLoading();\n                this._icon = '';\n                this._setData(null);\n                this._loading = {\n                    name: icon$1,\n                    abort: api.API.loadIcons([iconName], this._checkIcon.bind(this, false)),\n                };\n            }\n            return;\n        }\n        // Icon data is available\n        if (this._icon !== icon$1 || state.icon === null) {\n            // New icon or icon has been loaded\n            this._abortLoading();\n            this._icon = icon$1;\n            // Add classes\n            const classes = ['iconify'];\n            if (iconName.prefix !== '') {\n                classes.push('iconify--' + iconName.prefix);\n            }\n            if (iconName.provider !== '') {\n                classes.push('iconify--' + iconName.provider);\n            }\n            // Set data\n            this._setData({\n                data,\n                classes,\n            });\n            if (this.props.onLoad) {\n                this.props.onLoad(icon$1);\n            }\n        }\n    }\n    /**\n     * Component mounted\n     */\n    componentDidMount() {\n        this._checkIcon(false);\n    }\n    /**\n     * Component updated\n     */\n    componentDidUpdate(oldProps) {\n        if (oldProps.icon !== this.props.icon) {\n            this._checkIcon(true);\n        }\n    }\n    /**\n     * Abort loading\n     */\n    componentWillUnmount() {\n        this._abortLoading();\n    }\n    /**\n     * Render\n     */\n    render() {\n        const props = this.props;\n        const icon = this.state.icon;\n        if (icon === null) {\n            // Render placeholder\n            return props.children\n                ? props.children\n                : React.createElement('span', {});\n        }\n        // Add classes\n        let newProps = props;\n        if (icon.classes) {\n            newProps = {\n                ...props,\n                className: (typeof props.className === 'string'\n                    ? props.className + ' '\n                    : '') + icon.classes.join(' '),\n            };\n        }\n        // Render icon\n        return render(icon.data, newProps, props._inline, props._ref);\n    }\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\nconst Icon = React.forwardRef(function Icon(props, ref) {\n    const newProps = {\n        ...props,\n        _ref: ref,\n        _inline: false,\n    };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\nconst InlineIcon = React.forwardRef(function InlineIcon(props, ref) {\n    const newProps = { ...props, _ref: ref, _inline: true };\n    return React.createElement(IconComponent, newProps);\n});\n\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcons, replaceIDs };\n"],"names":["createCommonjsModule","fn","module","exports","icon","Object","defineProperty","value","fullIcon","iconDefaults","minifyProps","matchName","freeze","left","top","width","height","rotate","vFlip","hFlip","data","name","validateIcon","stringToIcon","validate","allowSimpleName","provider","colonSeparated","split","slice","length","shift","pop","prefix","result","dashSeparated","join","icon$1","match","merge","mergeIconData","alias","key","prop","parse","parseIconSet","defaultsKeys","keys","resolveAlias","icons","aliases","level","parent","callback","list","added","not_found","Array","forEach","push","defaults","create","body","storage_1","listIcons","getIcon","iconExists","addIcon","addIconSet","getStorage","newStorage","storage","missing","providerStorage","t","Date","now","err","allIcons","map","concat","functions$3","storageFunctions","addCollection","getIconData","allowSimpleNames","simpleNames","name$1","allow","id","replaceIDs","regex","replaceValue","escapeRegExp","str","replace","randomPrefix","toString","Math","random","counter","ids","exec","newID","RegExp","size","calculateSize","unitsSplit","unitsTest","ratio","precision","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","customisations","mergeCustomisations","inline","hAlign","vAlign","item","attr","build","preserveAspectRatio","props","iconToSVG","box","tempValue","transformations","rotation","floor","unshift","attributes","viewBox","functions$2","builderFunctions","buildIcon","customisations$1","modules$1","coreModules","config$1","defaultConfig","resources","index","timeout","dataAfterTimeout","query","sendQuery","config","payload","done","success","resourcesCount","startIndex","nextIndex","startTime","status","queriesSent","lastError","timer","queue","doneCallbacks","resetTimer","clearTimeout","abort","subscribe","overwrite","getQueryStatus","queriesPending","failQuery","clearQueue","filter","execNext","resource","error","isError","queued","indexOf","moduleResponse","setTimeout","redundancy","initRedundancy","cfg","Error","newConfig","setConfig","queries","cleanup","instance","queryCallback","doneCallback","query$1","newIndex","find","setIndex","getIndex","sort","sortIcons","loaded","pending","a","b","localeCompare","lastIcon","localStorage","callbacks","storeCallback","updateCallbacks","pendingUpdates","removeCallback","sources","source","providerCallbacks","items","row","providerPendingUpdates","hasPending","oldLength","idCounter","pendingSources","bind","modules","getAPIModule","setAPIModule","createConfig","path","maxURL","getAPIConfig","setAPIConfig","configStorage","fallBackAPISources","fallBackAPI","customConfig","getProviders","listToIcons","providers","api","emptyCallback","API","getRedundancyCache","pendingIcons","iconsToLoad","loaderFlags","queueFlags","redundancyCache","cachedReundancy","errorsCache","loadNewIcons","time","console","providerIconsToLoad","providerQueueFlags","providerPendingIcons","prepare","send","cache","providerLoaderFlags","loadedNewIcons","isPending","loadIcons","cleanedIcons","sortedIcons","callCallback","lastProvider","lastPrefix","newIcons","providerNewIcons","pendingQueue","functions$1","APIInternalFunctions","APIFunctions","addAPIProvider","getAPI","jsonp","rootVar","endPoint","maxLengthCache","pathCache","getGlobal","globalRoot","self","extraPrefix","iconifyRoot","cb","results","maxLength","maxHostLength","host","max","cacheKey","calculateMaxLength","params","iconsList","cbPrefix","global","cbCounter","i","total","charCodeAt","hash","callbackName","uri","script","document","createElement","type","async","src","head","appendChild","fetch_1","setFetch","fetchModule","fetch","then","response","json","catch","errno","browserStorage","storeCache","loadCache","mock","emptyList","count","cacheVersion","cachePrefix","countKey","versionKey","hour","local","session","_window","window","setCount","setItem","getCount","getItem","parseInt","fakeWindow","minTime","load","func","valid","JSON","cached","removeItem","version","destroyCache","initCache","store","stringify","shorthand","toggleBrowserCache","alignmentFromString","flipFromString","separator","custom","flip","trim","align","rotateFromString","units","svgDefaults","inlineDefaults","_api","Promise","nodeFetch","IconifyPreload","preload","e","IconifyProviders","IconComponent","state","this","_loading","setState","changed","iconName","_icon","_abortLoading","_setData","classes","onLoad","_checkIcon","oldProps","children","React","newProps","className","ref","defaultProps","style","componentProps","color","localCounter","id$1","dangerouslySetInnerHTML","__html","verticalAlign","render","_inline","_ref","Icon"],"sourceRoot":""}