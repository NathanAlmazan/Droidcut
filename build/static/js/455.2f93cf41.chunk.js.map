{"version":3,"file":"static/js/455.2f93cf41.chunk.js","mappings":"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","sources":["components/Label.js","components/Page.js","components/Scrollbar.js","../node_modules/sentence-case/src/index.ts","pages/History.js"],"sourcesContent":["import PropTypes from 'prop-types';\n// material\nimport { alpha, styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('span')(({ theme, ownerState }) => {\n  const { color, variant } = ownerState;\n\n  const styleFilled = (color) => ({\n    color: theme.palette[color].contrastText,\n    backgroundColor: theme.palette[color].main\n  });\n\n  const styleOutlined = (color) => ({\n    color: theme.palette[color].main,\n    backgroundColor: 'transparent',\n    border: `1px solid ${theme.palette[color].main}`\n  });\n\n  const styleGhost = (color) => ({\n    color: theme.palette[color].dark,\n    backgroundColor: alpha(theme.palette[color].main, 0.16)\n  });\n\n  return {\n    height: 22,\n    minWidth: 22,\n    lineHeight: 0,\n    borderRadius: 8,\n    cursor: 'default',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    padding: theme.spacing(0, 1),\n    color: theme.palette.grey[800],\n    fontSize: theme.typography.pxToRem(12),\n    fontFamily: theme.typography.fontFamily,\n    backgroundColor: theme.palette.grey[300],\n    fontWeight: theme.typography.fontWeightBold,\n\n    ...(color !== 'default'\n      ? {\n          ...(variant === 'filled' && { ...styleFilled(color) }),\n          ...(variant === 'outlined' && { ...styleOutlined(color) }),\n          ...(variant === 'ghost' && { ...styleGhost(color) })\n        }\n      : {\n          ...(variant === 'outlined' && {\n            backgroundColor: 'transparent',\n            color: theme.palette.text.primary,\n            border: `1px solid ${theme.palette.grey[500_32]}`\n          }),\n          ...(variant === 'ghost' && {\n            color: theme.palette.text.secondary,\n            backgroundColor: theme.palette.grey[500_16]\n          })\n        })\n  };\n});\n\n// ----------------------------------------------------------------------\n\nexport default function Label({ color = 'default', variant = 'ghost', children, ...other }) {\n  return (\n    <RootStyle ownerState={{ color, variant }} {...other}>\n      {children}\n    </RootStyle>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf([\n    'default',\n    'primary',\n    'secondary',\n    'info',\n    'success',\n    'warning',\n    'error'\n  ]),\n  variant: PropTypes.oneOf(['filled', 'outlined', 'ghost'])\n};\n","import PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { forwardRef } from 'react';\n// material\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => (\n  <Box ref={ref} {...other}>\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n    {children}\n  </Box>\n));\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import PropTypes from 'prop-types';\nimport SimpleBarReact from 'simplebar-react';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')({\n  flexGrow: 1,\n  height: '100%',\n  overflow: 'hidden'\n});\n\nconst SimpleBarStyle = styled(SimpleBarReact)(({ theme }) => ({\n  maxHeight: '100%',\n  '& .simplebar-scrollbar': {\n    '&:before': {\n      backgroundColor: alpha(theme.palette.grey[600], 0.48)\n    },\n    '&.simplebar-visible:before': {\n      opacity: 1\n    }\n  },\n  '& .simplebar-track.simplebar-vertical': {\n    width: 10\n  },\n  '& .simplebar-track.simplebar-horizontal .simplebar-scrollbar': {\n    height: 6\n  },\n  '& .simplebar-mask': {\n    zIndex: 'inherit'\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nScrollbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  sx: PropTypes.object\n};\n\nexport default function Scrollbar({ children, sx, ...other }) {\n  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n    navigator.userAgent\n  );\n\n  if (isMobile) {\n    return (\n      <Box sx={{ overflowX: 'auto', ...sx }} {...other}>\n        {children}\n      </Box>\n    );\n  }\n\n  return (\n    <RootStyle>\n      <SimpleBarStyle timeout={500} clickOnTrack={false} sx={sx} {...other}>\n        {children}\n      </SimpleBarStyle>\n    </RootStyle>\n  );\n}\n","import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function sentenceCaseTransform(input: string, index: number) {\n  const result = input.toLowerCase();\n  if (index === 0) return upperCaseFirst(result);\n  return result;\n}\n\nexport function sentenceCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: sentenceCaseTransform,\n    ...options,\n  });\n}\n","import React from 'react';\nimport { headerCase, sentenceCase } from 'change-case';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { styled } from '@mui/material/styles';\nimport Toolbar from '@mui/material/Toolbar';\n\n//components\nimport Page from '../components/Page';\nimport Scrollbar from '../components/Scrollbar';\nimport Label from '../components/Label';\n\n//firebase \nimport { useFirebaseApp } from '../contexts/FirebaseProvider';\nimport { ref, onValue } from \"firebase/database\";\nimport HistoryModel from '../models/HistoryModel';\n\nconst applyPagination = (list, page, limit) => {\n    return list.slice(page * limit, page * limit + limit);\n}\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n    height: 96,\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: theme.spacing(0, 1, 0, 3)\n  }));\n\nfunction Jobs() {\n    const { database, username } = useFirebaseApp();\n    const [userHistory, setUserHistory] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [limit, setLimit] = React.useState(5);\n    const [paginated, setPaginated] = React.useState([]);\n\n    React.useEffect(() => {\n        onValue(ref(database, 'VerifiedUsers/Schedule/History'), (snapshot) => {\n            const data = snapshot.val();\n            const historyList = new HistoryModel();\n            historyList.convertObjectToArray(data);\n\n            setUserHistory(state => historyList.getUserHistory(username));\n        })\n    }, [database, username])\n\n    React.useEffect(() => {\n        const pageUsers = applyPagination(userHistory, page, limit);\n        setPaginated(state => pageUsers)\n    }, [page, limit, userHistory])\n\n    const handlePageChange = (event, newPage) => {\n        setPage(newPage);\n    }\n    \n    const handleLimitChange = (event) => {\n        setLimit(parseInt(event.target.value));\n    }\n\n    return (\n        <Page title=\"Droidcut | History\">\n           <Container>\n                <Box sx={{\n                    display: 'flex',\n                    justifyContent: 'start',\n                    alignItems: 'center',\n                    mb: 5\n                }}>\n                    <Typography variant=\"h4\">History</Typography>\n                </Box>\n\n                <Card>\n                    <RootStyle>\n                        <Typography component=\"div\" variant=\"subtitle1\">\n                            History List\n                        </Typography>\n                    </RootStyle>\n                    <Scrollbar>\n                        <TableContainer sx={{ minWidth: 800 }}>\n                            <Table aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Customer Name</TableCell>\n                                        <TableCell align=\"right\">Haircut</TableCell>\n                                        <TableCell align=\"right\">Contact Number</TableCell>\n                                        <TableCell align=\"right\">Schedule</TableCell>\n                                        <TableCell align=\"right\">Status</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {paginated.map((history, index) => {\n\n                                        return (\n                                            <TableRow\n                                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                                key={index}\n                                                >\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    {headerCase(history.scheduled_by)}\n                                                </TableCell>\n                                                <TableCell align=\"right\">{headerCase(history.haircut)}</TableCell>\n                                                <TableCell align=\"right\">{history.contact_number}</TableCell>\n                                                <TableCell align=\"right\">{history.schedule_datetime}</TableCell>\n                                                <TableCell align=\"right\">\n                                                    <Label\n                                                        variant=\"ghost\"\n                                                        color={(history.status === 'Cancelled' && 'error') || 'success'}\n                                                        >\n                                                        {sentenceCase(history.status)}\n                                                    </Label>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    })}\n                                \n                                </TableBody>\n                            </Table>\n                       \n                        </TableContainer>\n                    </Scrollbar>\n                    <Box p={2}>\n                        <TablePagination\n                            component=\"div\"\n                            count={userHistory.length}\n                            onPageChange={handlePageChange}\n                            onRowsPerPageChange={handleLimitChange}\n                            page={page}\n                            rowsPerPage={limit}\n                            rowsPerPageOptions={[5, 10, 25, 30]}\n                        />\n                    </Box>\n                </Card>\n           </Container>\n        </Page>\n    )\n}\n\nexport default Jobs\n"],"names":["RootStyle","styled","theme","ownerState","color","variant","height","minWidth","lineHeight","borderRadius","cursor","alignItems","whiteSpace","display","justifyContent","padding","spacing","palette","grey","fontSize","typography","pxToRem","fontFamily","backgroundColor","fontWeight","fontWeightBold","contrastText","main","styleFilled","border","styleOutlined","dark","alpha","styleGhost","text","primary","secondary","Label","children","other","Page","forwardRef","ref","title","propTypes","PropTypes","flexGrow","overflow","SimpleBarStyle","SimpleBarReact","maxHeight","opacity","width","zIndex","Scrollbar","sx","test","navigator","userAgent","overflowX","timeout","clickOnTrack","sentenceCaseTransform","input","index","result","toLowerCase","Toolbar","useFirebaseApp","database","username","React","userHistory","setUserHistory","page","setPage","limit","setLimit","paginated","setPaginated","onValue","snapshot","data","val","historyList","HistoryModel","convertObjectToArray","state","getUserHistory","pageUsers","list","slice","applyPagination","Container","Box","mb","Typography","Card","component","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","map","history","scope","headerCase","scheduled_by","haircut","contact_number","schedule_datetime","status","options","delimiter","transform","p","TablePagination","count","length","onPageChange","event","newPage","onRowsPerPageChange","parseInt","target","value","rowsPerPage","rowsPerPageOptions"],"sourceRoot":""}